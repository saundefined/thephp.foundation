<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[The PHP Foundation]]></title><description><![CDATA[Supporting, Advancing, and Developing the PHP Language]]></description><updated>2022-09-02T07:09:48+00:00</updated><entry><title type="html"><![CDATA[PHP Core Roundup #4]]></title><content type="html"><![CDATA[<p><em>PHP Core Roundup</em> is a <a href="https://thephp.foundation/blog/tag/roundup/">series of posts</a> where we make regular updates on improvements, fixes, and new features made to PHP by the <em>PHP Foundation</em> and other contributors. Welcome to the fourth edition in the series, which brings updates about the upcoming PHP 8.2, discussions on a face-lift for the php.net home page, and more.</p>

<p>We’ll be publishing the posts on our website, and you can subscribe to a newsletter; You don’t necessarily have to be a PHP Foundation backer to follow <em>PHP Core Roundup</em>.</p>

<div class="px-4 pt-3 pb-10 mb-6 border-b border-t -mx-4 border-gray-200">
    <div class="max-w-xl mx-auto">
        <h2 class="text-xl text-left inline-block font-semibold text-gray-800 mb-1">Subscribe to PHP Foundation Updates</h2>
        <form method="POST" action="https://php-foundation-mailcoach.com/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056" class="mt-2">
            <div class="flex items-center">
                <input placeholder="Your email address" type="email" class="w-full px-2 py-4 mr-2  bg-gray-100 shadow-inner rounded-md border border-gray-400 focus:outline-none" name="email" required>
                <button class="bg-[#7f52ff] text-gray-200 px-5 py-2 rounded shadow " style="margin-left: -7.8rem;">Sign Up</button>
            </div>
        </form>
    </div>
</div>

<blockquote>
  <p><a href="https://opencollective.com/phpfoundation">The PHP Foundation</a> currently supports <a href="https://thephp.foundation/blog/2022/05/06/interview-with-core-developers/">six part-time PHP contributors</a> who work on both maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
</blockquote>

<h2 id="php-8.2-feature-freeze">PHP 8.2 Feature-Freeze</h2>

<p>On July 19, PHP 8.2 branch reached its feature-freeze. As the name suggests, the list of features we plan to ship with PHP 8.2 is now frozen. Contributors who wish to make substantial changes to PHP should now target the next PHP version, PHP 8.3.</p>

<p>In the coming weeks, the PHP Foundation members, the PHP development team, and contributors will be making improvements to get PHP 8.2 ready for production release.</p>

<p>Release managers elected for PHP 8.2, Ben Ramsey, Pierrick Charron, and Sergey Panteleev will have the final say in case a major change must be made to the PHP 8.2.</p>

<h2 id="php-8.2-beta-release">PHP 8.2 Beta Release</h2>

<p>The first beta release of PHP 8.2 was released last week. Now would be an ideal time to test your PHP applications on PHP 8.2.</p>

<p>Compiled Windows binaries are available at <a href="https://windows.php.net/qa/">windows.php.net/qa</a>, <a href="https://hub.docker.com/_/php?tab=tags&amp;page=1&amp;name=8.2.0">Docker images</a> are available at Docker Hub, and source code at <a href="https://github.com/php/php-src">php/php-src repository on GitHub</a> to compile yourself. On Homebrew, PHP 8.2-dev packages are available from <code><a href="https://github.com/shivammathur/homebrew-php">shivammathur/php</a></code> tap.</p>

<p>CI/CD platforms that use Docker images can use the PHP 8.2 docker images available with various base images. GitHub Actions can also make use of <code><a href="https://github.com/shivammathur/setup-php">shivammathur/setup-php</a></code> action, which supports PHP 8.2 builds.</p>

<h2 id="recent-rfcs%2C-merged-prs%2C-and-commits">Recent RFCs, Merged PRs, and Commits</h2>

<p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net web site</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>

<p>Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, improving documentation and the php.net web site, and more on a daily basis. Here is a summary of some of the changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<h2 id="php-8.2-release-page-and-a-face-lift-to-php.net-homepage">PHP 8.2 Release Page and a face-lift to php.net homepage</h2>

<p>Sergey Panteleev, one of the release managers for PHP 8.2, made a <a href="https://github.com/php/web-php/pull/675">pull-request</a> for the upcoming PHP 8.2 release page on php.net. It is still in its early stage, but the idea is to create a similar page highlighting new features in the new version, similar to the release pages for <a href="https://www.php.net/releases/8.1/en.php">PHP 8.1</a> and <a href="https://www.php.net/releases/8.0/en.php">PHP 8.0</a>.</p>

<p>There is also a new proposal to refresh the php.net web site home page by Mike van Riel, with a relevant <a href="https://twitter.com/mvriel/status/1542898919142789123">Twitter thread here</a> and a WIP <a href="https://github.com/php/web-php/pull/602">PR in here</a>.</p>

<h2 id="rfc-updates">RFC Updates</h2>

<p>Following are the RFCs discussed, voted, and implemented since our last update.</p>

<ul>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/rng_extension">Random Extension</a> and a <a href="https://wiki.php.net/rfc/random_extension_improvement">follow-up</a> RFC by Go Kudo</strong></p>

<p>Go Kudo first-proposed <a href="https://wiki.php.net/rfc/object_scope_prng">Object scoped RNG</a>, back in 2020, and proposed a series of RFCs to improve PHP’s Random Number Generator. The RFCs voted and implemented in PHP 8.2 now refactors PHP functions such as <code>random_int()</code>, <code>random_bytes()</code>, <code>rand()</code>, <code>mt_rand()</code> to a new extension called <code>random</code>. This is merely an internal refactor, and it is not possible to compile PHP without the extension.</p>

<p>There is a new PHP class called <code>\Random\Randomizer</code>, that can be instantiated with a class object that implements the <code>\Random\Engine</code> interface. The extension provides a few implementations built-in, such as <code>\Random\Engine\Mt19937</code>, <code>PcgOneseq128XslRr64</code>, and <code>Xoshiro256StarStar</code>.</p></li>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/dnf_types">Disjunctive Normal Form Types</a> RFC by Larry Garfield and George Peter Banyard 💜</strong></p>

<p><a href="https://en.wikipedia.org/wiki/Disjunctive_normal_form">Disjunctive Normal Form</a> (DNF) is now supported in PHP type declarations. It allows combining Union types (PHP 8.0) and Intersection types (PHP 8.1) to precisely declare a type.</p>

<p>For example, the it is now possible to declare functions with types like this:</p>

<pre><code class="php"> function showBanner(string|(Stringable&amp;SafeString)|int $value) {}
</code></pre>

<p>In the snipet above, <code>showBanner</code> function's <code>$value</code> parameter accepts a <code>string</code>, OR Intersection type <code>Stringable&amp;SafeString</code>, OR <code>int</code>.</p></li>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/fetch_property_in_const_expressions">Fetch properties of enums in const expressions</a> by Ilija Tovilo 💜</strong></p>

<p>This RFC proposes to allow the use of <code>-></code>/<code>?-></code> to fetch properties of enums in constant expressions. The primary motivation for this change is to allow fetching the name and value properties in places where enum objects aren't allowed, like array keys. There is <a href="https://github.com/php/php-src/issues/8344">currently no way</a> to express this without repeating the value of the enum case.</p>

<p>With this change implemented in PHP 8.2, it will be possible to declare expressions like the following:</p>

<pre><code class="php">enum E: string {
   case Foo = 'foo';
}

// Constants
const C = E::Foo-&gt;name;  

// Static variables
function f() {
   static $v = E::Foo-&gt;value;
}


// Attributes
#[Attr(E::Foo-&gt;name)]
class C {} 


// Parameter default values
function f($p = E::Foo-&gt;value) {}

// Property default values
class C {
   public string $p = E::Foo-&gt;name;
}

// The rhs of -&gt; allows other constant expressions
const VALUE = 'value';
class C {
    const C = E::Foo-&gt;{VALUE};
}
</code></pre></li>
<li><p><strong>Declined: New Curl URL API by Pierrick Charron</strong></p></li>
<li><strong>Declined: <a href="https://wiki.php.net/rfc/json_encode_indentation"><code>json_encode</code> indentation</a> by Timon de Groot</strong></li>
<li><p><strong>Declined: <a href="https://wiki.php.net/rfc/auto-capture-closure">Short Closures 2.0</a> by Nuno Maduro, Larry Garfield, and Arnaud Le Blanc</strong>
The RFC missed the 2/3 vote with 27 votes in favor and 16 against.</p>

<p>It proposed a short syntax for closures, inheriting the features of arrow functions (auto-capture), with multiple statements.</p>

<p>This received a lot of feedback. Some of which can be addressed, so there is still hope for this feature to land in a future version.</p>

<p>Some of the authors may propose a new version in PHP 8.3.</p></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some of the changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes, and all pull requests are reviewed by the PHP core developers.</p>

<ul>
<li>JIT and Opcache fixes by Dmitry Stogov

<ul>
<li>Fixed bug <a href="https://github.com/php/php-src/issues/8847">GH-8847</a> (PHP hanging infinitely at 100% CPU when check php syntax of a valid file) in <a href="https://github.com/php/php-src/commit/7cf6f17383">7cf6f17383</a></li>
<li>Allocate JIT buffer close to PHP .text segment to allow using direct IP-relative calls and jumps in <a href="https://github.com/php/php-src/pull/8890">GH-8890</a> in <a href="https://github.com/php/php-src/commit/17aa81a5e2">17aa81a5e2</a></li>
<li>Fix type inference for <code>FETCH_DI_UNSET</code> in <a href="https://github.com/php/php-src/commit/bd30eff5de">bd30eff5de</a></li>
<li>Fix type inference in <a href="https://github.com/php/php-src/commit/82d3ad64df">82d3ad64df</a></li>
<li>Fix invalid <code>free()</code> during type persistence in <a href="https://github.com/php/php-src/commit/f24548e217">f24548e217</a> and <a href="https://github.com/php/php-src/commit/34b11a7524">34b11a7524</a></li>
<li>Fix memory leak in <a href="https://github.com/php/php-src/commit/44b86aee31">44b86aee31</a></li>
<li>JIT: Fix missing type store in <a href="https://github.com/php/php-src/commit/e70d282077">e70d282077</a></li>
<li>Fix type inference in <a href="https://github.com/php/php-src/commit/d50875c822">d50875c822</a></li>
</ul></li>
<li>Improvements in Mbstring extension by Alex Dowad

<ul>
<li>New implementation of <code>mb_{de,en}code_numericentity</code> in <a href="https://github.com/php/php-src/commit/91969e908f">91969e908f</a></li>
<li>Fix legacy conversion filter encodings JIS in <a href="https://github.com/php/php-src/commit/048f6cbcde">048f6cbcde</a>,   QPrint in <a href="https://github.com/php/php-src/commit/31cbb7a3a5">31cbb7a3a5</a>, SJIS-2004 in <a href="https://github.com/php/php-src/commit/d7bab66135">d7bab66135</a>, MacJapanese in <a href="https://github.com/php/php-src/commit/7ece8f18b0">7ece8f18b0</a>, Base64 in <a href="https://github.com/php/php-src/commit/87b71595ba">87b71595ba</a>, HTML entities in <a href="https://github.com/php/php-src/commit/2eff19e38f">2eff19e38f</a>,</li>
<li>ISO-2022-KR in <a href="https://github.com/php/php-src/commit/c8e4f313fa">c8e4f313fa</a>, UTF-7 in <a href="https://github.com/php/php-src/commit/1662f7f79f">1662f7f79f</a>, CP50220 in <a href="https://github.com/php/php-src/commit/6938e35122">6938e35122</a>, GB18030 in <a href="https://github.com/php/php-src/commit/1526bab6d0">1526bab6d0</a>, HZ in <a href="https://github.com/php/php-src/commit/9c3972fb3d">9c3972fb3d</a>, HTML entities in <a href="https://github.com/php/php-src/commit/fa83a8e15e">fa83a8e15e</a>, SJIS variants (‘0’ at end of buffer) in <a href="https://github.com/php/php-src/commit/7559bf77d2">7559bf77d2</a>, CP50220 (multi-codepoint kana at end of buffer) in <a href="https://github.com/php/php-src/commit/3cf432798e">3cf432798e</a>, QPrint (same order of check as legacy code) in <a href="https://github.com/php/php-src/commit/5fee30b630">5fee30b630</a>, UUEncode in <a href="https://github.com/php/php-src/commit/40f5048aa7">40f5048aa7</a>, ISO-2022-JP-KDDI in <a href="https://github.com/php/php-src/commit/d8a61cef4f">d8a61cef4f</a>, SJIS-2004 in <a href="https://github.com/php/php-src/commit/8a915ed26c">8a915ed26c</a>, ISO-2022-KR in <a href="https://github.com/php/php-src/commit/6d525a425e">6d525a425e</a>, and almost all 8-bit text encodings in <a href="https://github.com/php/php-src/commit/cebb8009c6">cebb8009c6</a>,</li>
<li><code>mbfl_strwidth</code> does not need to use legacy conversion filters now in <a href="https://github.com/php/php-src/commit/30bfeef48d">30bfeef48d</a></li>
<li><code>mb_decode_numericentity</code> converts entities which immediately follow a valid/invalid entity in <a href="https://github.com/php/php-src/commit/5d6bd557b3">5d6bd557b3</a></li>
<li>New implementation of <code>mb_convert_kana</code> in <a href="https://github.com/php/php-src/commit/9ac49c0dd3">9ac49c0dd3</a></li>
<li><code>mb_decode_numericentity</code> decodes valid entities which are truncated at end of string in <a href="https://github.com/php/php-src/commit/76a92c26e3">76a92c26e3</a></li>
</ul></li>
<li>Fixes and improvements in the Date extension by Derick Rethans 💜

<ul>
<li>Fixed memory leaks with <code>DatePeriod::__unserialise</code> in <a href="https://github.com/php/php-src/commit/0dbedb3dbd">0dbedb3dbd</a></li>
<li>Fixed <a href="https://github.com/php/php-src/issues/8730">GH-8730</a>: <code>DateTime::diff</code> miscalculation is same time zone of different type in <a href="https://github.com/php/php-src/commit/cc9c57722a">cc9c57722a</a></li>
<li>Fixed <a href="https://bugs.php.net/bug.php?id=81263">#81263</a>: Wrong result from <code>DateTimeImmutable::diff</code> in <a href="https://github.com/php/php-src/commit/37d460b64a">37d460b64a</a></li>
<li>Fixed <a href="https://github.com/php/php-src/issues/8964">GH-8964</a> in <a href="https://github.com/php/php-src/commit/7831a1cae6">7831a1cae6</a></li>
<li>Import timelib 2022.01 in <a href="https://github.com/php/php-src/commit/8ea587a305">8ea587a305</a></li>
<li>Fixed bug <a href="https://bugs.php.net/bug.php?id=80022">#80022</a>: Support ISO 8601 years outside 0000-9999 range better in <a href="https://github.com/php/php-src/commit/6ae86c2358">6ae86c2358</a></li>
<li>Add test case for bug <a href="https://bugs.php.net/bug.php?id=80483">#80483</a>/<a href="https://bugs.php.net/bug.php?id=75035">#75035</a> in <a href="https://github.com/php/php-src/commit/1d0e5eddd5">1d0e5eddd5</a></li>
<li>Fixed bug <a href="https://bugs.php.net/bug.php?id=80047">#80047</a> (DatePeriod doesn't warn with custom DateTimeImmutable) in <a href="https://github.com/php/php-src/commit/001e7dbb04">001e7dbb04</a></li>
<li>Add test case for <a href="https://github.com/php/php-src/issues/9601">GH-9601</a>: DateInterval 1.5s added to DateTimeInterface is rounded down since PHP 8.1.0 in <a href="https://github.com/php/php-src/commit/a0c01f385c">a0c01f385c</a></li>
<li>Change test to ignore INT_MIN/MAX, and fixed off WS in <a href="https://github.com/php/php-src/commit/d002a0d837">d002a0d837</a></li>
</ul></li>
<li><strong>Add <code>error_log_mode</code> setting in <a href="https://github.com/php/php-src/commit/ffdf25a270">ffdf25a270</a> by Mikhail Galanin</strong></li>
<li><strong>Add <code>FILTER_FLAG_GLOBAL_RANGE</code> to filter Global IPs as per RFC 6890 in <a href="https://github.com/php/php-src/commit/d8fc05c05e">d8fc05c05e</a> by @</strong> <a href="https://github.com/vnsavage">vnsavage</a></li>
<li>Do not send <code>X-Powered-By</code> if headers sent in <a href="https://github.com/php/php-src/pull/9039">GH-9039</a> in <a href="https://github.com/php/php-src/commit/922371f3b1">922371f3b1</a> by Eric Norris</li>
<li>Fixed bug #65069: <code>GlobIterator</code> incorrect handling of <code>open_basedir</code> check by Jakub Zelenka 💜</li>
<li>Series of commits by Máté Kocsis 💜 to declare extension constants in stubs: <code>ext/mysqli</code> in <a href="https://github.com/php/php-src/pull/8811">GH-8811</a>, <code>ext/odbc</code> in <a href="https://github.com/php/php-src/pull/9045">GH-9045</a>, <code>ext/openssl</code> in <a href="https://github.com/php/php-src/pull/9046">GH-9046</a>, <code>ext/pcre</code> in <a href="https://github.com/php/php-src/pull/9077">GH-9077</a>, <code>ext/pdo</code> in <a href="https://github.com/php/php-src/pull/9078">GH-9078</a>, <code>ext/pspell</code> in <a href="https://github.com/php/php-src/pull/9096">GH-9096</a>, <code>ext/posix</code> in <a href="https://github.com/php/php-src/pull/9095">GH-9095</a>, <code>ext/phar</code> in <a href="https://github.com/php/php-src/pull/9094">GH-9094</a>, <code>ext/random</code> in <a href="https://github.com/php/php-src/pull/9109">GH-9109</a>, <code>ext/session</code> in <a href="https://github.com/php/php-src/pull/9112">GH-9112</a>, <code>ext/readline</code> in <a href="https://github.com/php/php-src/pull/9110">GH-9110</a>, <code>ext/reflection</code> in <a href="https://github.com/php/php-src/pull/9111">GH-9111</a>, <code>ext/sysvmsg</code> in <a href="https://github.com/php/php-src/pull/9125">GH-9125</a>, <code>ext/soap</code> in <a href="https://github.com/php/php-src/pull/9124">GH-9124</a>, <code>ext/zend_test</code> in <a href="https://github.com/php/php-src/pull/9135">GH-9135</a>, <code>ext/xml</code> in <a href="https://github.com/php/php-src/pull/9131">GH-9131</a>, <code>ext/xsl</code> in <a href="https://github.com/php/php-src/pull/9134">GH-9134</a>, <code>ext/xmlreader</code> in <a href="https://github.com/php/php-src/pull/9133">GH-9133</a>, <code>ext/snmp</code> in <a href="https://github.com/php/php-src/pull/9113">GH-9113</a>, <code>ext/zlib</code> in <a href="https://github.com/php/php-src/pull/9147">GH-9147</a>, <code>ext/pgsql</code> in <a href="https://github.com/php/php-src/pull/9092">GH-9092</a>, and <code>ext/sqlite3</code> in <a href="https://github.com/php/php-src/pull/9181">GH-9181</a></li>
<li>Fix <code>zend_atomic_bool_exchange_ex()</code> in HAVE_NO_ATOMICS case in <a href="https://github.com/php/php-src/pull/8801">GH-8801</a> in <a href="https://github.com/php/php-src/commit/b09420e3a8">b09420e3a8</a> by twosee</li>
<li><code>main/streams/plain_wrapper</code>: skip <code>lseek(SEEK_CUR)</code> for newly opened files in <a href="https://github.com/php/php-src/commit/e2bd3b1e99">e2bd3b1e99</a> by Max Kellermann</li>
<li>Improve tests on 32bit in <a href="https://github.com/php/php-src/pull/8448">GH-8448</a> by Michael Voříšek</li>
<li><code>streams/xp_socket</code>: fix clang build error with enum usage on bool condition in <a href="https://github.com/php/php-src/commit/7ceae66182">7ceae66182</a> by David Carlier</li>
<li>Add test for backtrace with aliased trait in <a href="https://github.com/php/php-src/pull/8705">GH-8705</a> in <a href="https://github.com/php/php-src/commit/f26f6d9479">f26f6d9479</a> by Michael Voříšek</li>
<li>Use bool and rename variable for ease of comprehension in <code>ps_title.c</code> in <a href="https://github.com/php/php-src/commit/b468d6fb54">b468d6fb54</a> by George Peter Banyard 💜</li>
<li>Use <code>size_t</code> for <code>get_ps_title()</code> length parameter in <a href="https://github.com/php/php-src/commit/9a7d37ac66">9a7d37ac66</a> by George Peter Banyard 💜</li>
<li>Adds <code>TCP_CONGESTION</code> socket option for Linux/FreeBSD in <a href="https://github.com/php/php-src/commit/a193427333">a193427333</a> by David Carlier</li>
<li>Fix the crypt sha apis build (with recent clang versions) in <a href="https://github.com/php/php-src/commit/b3569865b3">b3569865b3</a> by David Carlier</li>
<li>Disallow assigning reference to unset readonly property in <a href="https://github.com/php/php-src/pull/7942">GH-7942</a> by Ilija Tovilo 💜</li>
<li>Abort LMDB transaction when trying to delete non-existing key in <a href="https://github.com/php/php-src/commit/8fce70ae7b">8fce70ae7b</a> and <a href="https://github.com/php/php-src/commit/1d0c287b90">1d0c287b90</a> by George Peter Banyard 💜</li>
<li>Add <code>php_register_known_variable()</code> for known var names in <a href="https://github.com/php/php-src/commit/55908db007">55908db007</a> by George Peter Banyard 💜</li>
<li>Refactor registration of variables for the CLI SAPI in <a href="https://github.com/php/php-src/commit/b37245b8da">b37245b8da</a> and by George Peter Banyard 💜</li>
<li>Pre-compute remote address length in CLI SAPI in <a href="https://github.com/php/php-src/commit/1c753a958b">1c753a958b</a> by George Peter Banyard 💜</li>
<li>Fix labeler selection of SAPIs in <a href="https://github.com/php/php-src/commit/583cc01e9e">583cc01e9e</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8907">GH-8907</a>: Document forgotten API changes in <a href="https://github.com/php/php-src/commit/fdc09e302a">fdc09e302a</a> by David Carlier</li>
<li>Use <code>safe_*erealloc*</code> flavor in few places to mitigate possible overflows in <a href="https://github.com/php/php-src/commit/dfbb425295">dfbb425295</a> by David Carlier</li>
<li>Update FreeBSD CI image in <a href="https://github.com/php/php-src/commit/4f4457a6e9">4f4457a6e9</a> and <a href="https://github.com/php/php-src/commit/f2d6e175fe">f2d6e175fe</a> by David Carlier</li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=81723">#81723</a>: Memory corruption in <code>finfo_buffer()</code> in <a href="https://github.com/php/php-src/commit/ca6d511fa5">ca6d511fa5</a> by Christoph M. Becker</li>
<li>Allow for arbitrary (class) attributes in stubs in <a href="https://github.com/php/php-src/commit/9f29e2d7e9">9f29e2d7e9</a> by Bob Weinand</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8842">GH-8842</a> don’t set sensitive param in legacy arginfo in <a href="https://github.com/php/php-src/commit/b45cd10238">b45cd10238</a> by Remi Collet</li>
<li><strong>Implement <code>mysqli_execute_query()</code> in <a href="https://github.com/php/php-src/pull/8660">GH-8660</a> in <a href="https://github.com/php/php-src/commit/1dc51c7b90">1dc51c7b90</a> by Kamil Tekiela</strong></li>
<li>intl extension, build fix for icu >= 71.x release in <a href="https://github.com/php/php-src/commit/b22d2bf589">b22d2bf589</a> by David Carlier</li>
<li>Improve contrast for dark mode phpinfo in <a href="https://github.com/php/php-src/pull/8893">GH-8893</a> in <a href="https://github.com/php/php-src/commit/d9c49ae1c1">d9c49ae1c1</a> by Levi Morrison</li>
<li>Fixed bug <a href="https://github.com/php/php-src/issues/8943">GH-8943</a> <code>Reflection::getModifiersNames()</code> with readonly modifier in <a href="https://github.com/php/php-src/commit/c650e67c90">c650e67c90</a> by Pierrick Charron</li>
<li>FPM add routing view global option (for FreeBSD for now) in <a href="https://github.com/php/php-src/commit/5174ee2353">5174ee2353</a> by David CARLIER</li>
<li>Update mime-db from 1.45.0 to 1.52.0 in <a href="https://github.com/php/php-src/commit/d3c86527a5">d3c86527a5</a> by Ayesh Karunaratne</li>
<li>Remove silent argument to <code>spl_filesystem_file_read_line()</code> / <code>spl_filesystem_file_read_line_ex()</code>  in <a href="https://github.com/php/php-src/commit/a055c54801">a055c54801</a> and <a href="https://github.com/php/php-src/commit/bb3d0933af">bb3d0933af</a> by George Peter Banyard 💜</li>
<li>Use true/false and comment when arg correspond to silent arg in <a href="https://github.com/php/php-src/commit/247de8a4de">247de8a4de</a> by George Peter Banyard 💜</li>
<li>Make <code>php_fgetcsv()</code> return a <code>HashTale</code> instead of in-out zval param in <a href="https://github.com/php/php-src/pull/8936">GH-8936</a> in <a href="https://github.com/php/php-src/commit/4ccf0b0181">4ccf0b0181</a> by George Peter Banyard 💜</li>
<li>FPM: Fix possible double free on configuration load failure in <a href="https://github.com/php/php-src/commit/bd6793372b">bd6793372b</a> by Heiko Weber</li>
<li>Add upgrading internals entry for <code>fgetcsv()</code> changes in <a href="https://github.com/php/php-src/commit/eacf6f43ed">eacf6f43ed</a> by George Peter Banyard 💜</li>
<li>Reduce memory allocated by <code>var_export</code>, <code>json_encode</code>, <code>serialize</code>, and other in <a href="https://github.com/php/php-src/pull/8902">GH-8902</a> in <a href="https://github.com/php/php-src/commit/4df3dd7679">4df3dd7679</a> by Arnaud Le Blanc 💜</li>
<li><strong>Fix <a href="https://github.com/php/php-src/issues/8924">GH-8924</a> str_split of empty string must return empty array in <a href="https://github.com/php/php-src/commit/e80925445c">e80925445c</a> by Michael Voříšek</strong></li>
<li>intl extension, build fix for icu >= 69.x release. <code>ubrk/ucnv_safeClone</code> had been deprecated in favor of <code>ubrk/ucnv_clone</code> which does not use user provided stacks but remain thread safe in <a href="https://github.com/php/php-src/commit/7c3dfbb845">7c3dfbb845</a> by David Carlier</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8952">GH-8952</a>: std streams can not be deliberately closed in <a href="https://github.com/php/php-src/pull/8953">GH-8953</a> in <a href="https://github.com/php/php-src/commit/2dbde18b29">2dbde18b29</a> by Arnaud Le Blanc 💜</li>
<li><strong>Add <a href="https://php.watch/versions/8.2/ini_parse_quantity"><code>ini_parse_quantity</code> function</a> to convert ini quantities shorthand notation to int in <a href="https://github.com/php/php-src/pull/8454">GH-8454</a> in  by Dennis Snell</strong></li>
<li>Fix “<code>%f</code>” regex in <code>run-tests.php</code> in <a href="https://github.com/php/php-src/pull/8965">GH-8965</a> in <a href="https://github.com/php/php-src/commit/6cd5bd1bcd">6cd5bd1bcd</a> by Michael Voříšek</li>
<li>sockets introduces <code>socket_set_option</code> <code>SO_ZEROCOPY</code> and <code>MSG_ZEROCOPY</code> for the <code>socket_send*</code> functions. it avoids copy b/w userland and kernel for both TCP and UDP protocols in <a href="https://github.com/php/php-src/commit/dedad408fe">dedad408fe</a> by David Carlier</li>
<li><strong>FPM: Implement access log filtering in <a href="https://github.com/php/php-src/pull/8174">GH-8174</a> by Mark Gallagher</strong></li>
<li>QA - Test Cov - ext:pcntl - <code>pcntl_signal()</code> - max signal allowed in <a href="https://github.com/php/php-src/pull/8956">GH-8956</a> in <a href="https://github.com/php/php-src/commit/23654a172e">23654a172e</a> by Juan Morales</li>
<li>Add <code>zend_array_to_list()</code> in <a href="https://github.com/php/php-src/pull/8976">GH-8976</a> in <a href="https://github.com/php/php-src/commit/75a9a5f311">75a9a5f311</a> by Tim Düsterhus</li>
<li>gdbinit: Update <code>print_ht</code> for new compact packed arrays representation in <a href="https://github.com/php/php-src/pull/8966">GH-8966</a> in <a href="https://github.com/php/php-src/commit/c654973c02">c654973c02</a> by Arnaud Le Blanc 💜</li>
<li><strong>Update to libpcre2 10.40 in <a href="https://github.com/php/php-src/commit/32cceb75bf">32cceb75bf</a> by Christoph M. Becker</strong></li>
<li>Make the ABI compatibility of generated arginfo files configurable in <a href="https://github.com/php/php-src/pull/8931">GH-8931</a> in <a href="https://github.com/php/php-src/commit/0bddbab084">0bddbab084</a> by Máté Kocsis 💜</li>
<li>Require <code>zend_constants.stub.php</code> from <code>zend_exceptions.stubs.php</code> in <a href="https://github.com/php/php-src/commit/bb5be650c6">bb5be650c6</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8576">GH-8576</a>: Bad interpretation of length when char is UTF-8 in <a href="https://github.com/php/php-src/pull/8926">GH-8926</a> by Christoph M. Becker</li>
<li>Support the actual <code>#[\SensitiveParameter]</code> attribute in stubs in <a href="https://github.com/php/php-src/pull/8836">GH-8836</a> in <a href="https://github.com/php/php-src/commit/342e18f105">342e18f105</a> by Tim Düsterhus</li>
<li>Fix parameter order in <code>gen_stub.php</code> in <a href="https://github.com/php/php-src/commit/227a8576d2">227a8576d2</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8923">GH-8923</a>: error_log on Windows can hold the file write lock in <a href="https://github.com/php/php-src/pull/8925">GH-8925</a> by Christoph M. Becker</li>
<li>add compatibility for tentative-return-type in <a href="https://github.com/php/php-src/commit/6e24c16c4a">6e24c16c4a</a> by Remi Collet</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8750">GH-8750</a>: Can not create <code>VT_ERROR</code> variant type in <a href="https://github.com/php/php-src/pull/8886">GH-8886</a> by Christoph M. Becker</li>
<li>INI parser: Fix typo /multipler/multiplier in <a href="https://github.com/php/php-src/pull/8987">GH-8987</a> by Ayesh Karunaratne</li>
<li>QA - <code>pcntl_exec</code> - check stringable parameters error in <a href="https://github.com/php/php-src/pull/8990">GH-8990</a> by Juan Morales</li>
<li>Prevent potential buffer overflow for large value of <code>php_cli_server_workers_max</code> in <a href="https://github.com/php/php-src/commit/789a37f144">789a37f144</a> by guoyiyuan</li>
<li>QA - <code>pcntl_signal</code> - error when handler is int and not <code>SIG_DFL</code> or <code>SIG_IGN</code> in <a href="https://github.com/php/php-src/pull/9001">GH-9001</a> by Juan Morales</li>
<li>QA - <code>ftp_connect</code> - error behavior when connection fails in <a href="https://github.com/php/php-src/pull/9002">GH-9002</a> by Juan Morales</li>
<li><strong>Extend deprecation notices to <code>is_callable($foo)</code> and <code>callable $foo</code> in <a href="https://github.com/php/php-src/pull/8823">GH-8823</a> by Rowan Tommins</strong></li>
<li>Fix RC func info of <code>str_split</code> in <a href="https://github.com/php/php-src/pull/9016">GH-9016</a> in <a href="https://github.com/php/php-src/commit/63912b5ecd">63912b5ecd</a> by Ilija Tovilo 💜</li>
<li>Fix <code>WeakMap</code> object reference offset causing <code>TypeError</code> in <a href="https://github.com/php/php-src/pull/8995">GH-8995</a> in <a href="https://github.com/php/php-src/commit/ede92a86f2">ede92a86f2</a> by Tobias Bachert</li>
<li>random: whitelist <code>arc4random_buf</code> if glibc in <a href="https://github.com/php/php-src/commit/3be9118662">3be9118662</a> by Cristian Rodríguez</li>
<li>random extension macOs handling update in <a href="https://github.com/php/php-src/commit/d830a1f6f0">d830a1f6f0</a> by David CARLIER</li>
<li>QA - <code>mb_http_input</code> - function returns FALSE for type ‘L’ or ‘l’ in <a href="https://github.com/php/php-src/pull/9018">GH-9018</a> by jcm</li>
<li>opcache JIT: Adds initial support for macOs Instruments performance measurement in <a href="https://github.com/php/php-src/commit/c56e183226">c56e183226</a> by David CARLIER</li>
<li>QA -<code>mb_convert_encoding_array</code> - error for object item in array in <a href="https://github.com/php/php-src/pull/9023">GH-9023</a> by jcm</li>
<li>QA - <code>ftp_rawlist</code> - check list return value in <a href="https://github.com/php/php-src/pull/9012">GH-9012</a> by jcm</li>
<li>Prevent fiber switching in tick function and signal handlers in <a href="https://github.com/php/php-src/pull/9028">GH-9028</a> in <a href="https://github.com/php/php-src/commit/2bc6025c2c">2bc6025c2c</a> by Aaron Piotrowski</li>
<li>Add <code>SensitiveParameter</code> as known string and use it in arginfo in <a href="https://github.com/php/php-src/commit/55a88f36b6">55a88f36b6</a> by Remi Collet</li>
<li>Allow to not close stream on rscr dtor in PHP CLII SAPI in <a href="https://github.com/php/php-src/commit/0a4a55fd44">0a4a55fd44</a> by Jakub Zelenka 💜</li>
<li>Fix JIT crash with large number of <code>match</code>/<code>switch</code> arms in <a href="https://github.com/php/php-src/pull/8961">GH-8961</a> in <a href="https://github.com/php/php-src/commit/f2381ae4ba">f2381ae4ba</a> by Arnaud Le Blanc 💜</li>
<li>cleanup unused in <a href="https://github.com/php/php-src/commit/ee1d6188cf">ee1d6188cf</a> by Remi Collet</li>
<li>no need for attributes on legacy in <a href="https://github.com/php/php-src/commit/af72d6e5d9">af72d6e5d9</a> by Remi Collet</li>
<li>in <a href="https://github.com/php/php-src/commit/f0d536844f">f0d536844f</a> by Máté Kocsis 💜</li>
<li>FPM: Downgrade occasional “failed to acquire scoreboard” warning in <a href="https://github.com/php/php-src/commit/3040f75f43">3040f75f43</a>, <a href="https://github.com/php/php-src/commit/db5f6713ee">db5f6713ee</a> by Felix Wiedemann</li>
<li>Fix possible crash in case of exception in <a href="https://github.com/php/php-src/commit/c6eb5dc5fd">c6eb5dc5fd</a> by Dmitry Stogov</li>
<li>Update request startup error messages in <a href="https://github.com/php/php-src/commit/09237f6126">09237f6126</a> by Eric Norris</li>
<li><code>DatePeriod</code> properties cannot be made readonly in <a href="https://github.com/php/php-src/pull/9013">GH-9013</a> in <a href="https://github.com/php/php-src/commit/e13d60c039">e13d60c039</a> by Máté Kocsis 💜</li>
<li>Drop support for <code>SQLITE_COPY</code> in authorizer callback in <a href="https://github.com/php/php-src/pull/9041">GH-9041</a> by Christoph M. Becker</li>
<li><strong>Deprecate <code>MYSQLI_IS_MARIADB</code> in <a href="https://github.com/php/php-src/pull/8919">GH-8919</a> by Kamil Tekiela</strong></li>
<li>Port standard/crc32 for windows arm64 in <a href="https://github.com/php/php-src/pull/7703">GH-7703</a> by dixyes</li>
<li>Do not assert SSE/AVX resolvers at windows arm64 in <a href="https://github.com/php/php-src/pull/7704">GH-7704</a> by dixyes</li>
<li>opcache JIT support improvements attempts on macOs in <a href="https://github.com/php/php-src/commit/1416961505">1416961505</a> by David CARLIER</li>
<li>Rename <code>@cname</code> to <code>@cvalue</code> in stubs in <a href="https://github.com/php/php-src/pull/9043">GH-9043</a> in <a href="https://github.com/php/php-src/commit/e328c68305">e328c68305</a> by Máté Kocsis 💜</li>
<li>RFC: Make the <code>iterator_*()</code> family accept all <code>iterable</code>s in <a href="https://github.com/php/php-src/pull/8819">GH-8819</a> in <a href="https://github.com/php/php-src/commit/7ae7df5b46">7ae7df5b46</a> by Tim Düsterhus</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9017">GH-9017</a>: <code>php_stream_sock_open_from_socket</code> could return <code>NULL</code> in <a href="https://github.com/php/php-src/pull/9020">GH-9020</a> by Heiko Weber</li>
<li>opcache find best candidate near .text segment for large maps on FreeBSD. Follow up on #8890 using similar workflow, we go through the php binary mapping per address boundaries in <a href="https://github.com/php/php-src/commit/1977ef92de">1977ef92de</a> by David CARLIER</li>
<li>Fix <code>--CGI--</code> support of <code>run-tests.php</code> in <a href="https://github.com/php/php-src/pull/9061">GH-9061</a> by Christoph M. Becker</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9008">GH-9008</a>: <code>mb_detect_encoding()</code>: wrong results with null $encodings in <a href="https://github.com/php/php-src/pull/9063">GH-9063</a> by Christoph M. Becker</li>
<li><code>phpinfo</code> HTML Output: Make module title names clickable and link to the URL fragment in <a href="https://github.com/php/php-src/pull/9054">GH-9054</a> by Ayesh Karunaratne</li>
<li>Fix segmentation fault in <code>Randomizer::getBytes()</code> if a user engine throws in <a href="https://github.com/php/php-src/pull/9055">GH-9055</a> in <a href="https://github.com/php/php-src/commit/998ede7123">998ede7123</a> by Tim Düsterhus</li>
<li>Fix byte expansion in <code>rand_rangeXX()</code> in <a href="https://github.com/php/php-src/pull/9056">GH-9056</a> in <a href="https://github.com/php/php-src/commit/804c3fc821">804c3fc821</a> by Tim Düsterhus</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9067">GH-9067</a>: random extension is not thread safe in <a href="https://github.com/php/php-src/pull/9070">GH-9070</a> by Christoph M. Becker</li>
<li>Port <code>win32/codepage.c</code> codes for windows arm64 in <a href="https://github.com/php/php-src/pull/7702">GH-7702</a> by dixyes</li>
<li>Sockets disable zerocopy test on ppc based arch in <a href="https://github.com/php/php-src/commit/067a3022f8">067a3022f8</a> by David Carlier</li>
<li>Fix rc info of iterator_to_array in <a href="https://github.com/php/php-src/pull/9080">GH-9080</a> in <a href="https://github.com/php/php-src/commit/d4a9cc8856">d4a9cc8856</a> by Ilija Tovilo 💜</li>
<li>Fix memory leak in LMDB driver in <a href="https://github.com/php/php-src/commit/5b83b3a933">5b83b3a933</a> by George Peter Banyard 💜</li>
<li>Fix RC debug of stub attribute in <a href="https://github.com/php/php-src/pull/9082">GH-9082</a> in <a href="https://github.com/php/php-src/commit/41a5b46e7d">41a5b46e7d</a> by Ilija Tovilo 💜</li>
<li>Remove unnecessary include in SPL in <a href="https://github.com/php/php-src/commit/11c424c9fb">11c424c9fb</a> by George Peter Banyard 💜</li>
<li>Re-add MSAN in nightly in <a href="https://github.com/php/php-src/commit/ad136e6a6d">ad136e6a6d</a> by Ilija Tovilo 💜</li>
<li>Assert all test files are cleaned up in CI in <a href="https://github.com/php/php-src/pull/8977">GH-8977</a> in <a href="https://github.com/php/php-src/commit/b5ab0e06b8">b5ab0e06b8</a> by Ilija Tovilo 💜</li>
<li>Fix SPL test cleanup in <a href="https://github.com/php/php-src/commit/3962f00b01">3962f00b01</a> by Ilija Tovilo 💜</li>
<li>Avoid signed integer overflow in <code>php_random_range()</code> in <a href="https://github.com/php/php-src/pull/9066">GH-9066</a> in <a href="https://github.com/php/php-src/commit/133b9b08da">133b9b08da</a> by Go Kudo</li>
<li>Convert <code>client-&gt;request.request_uri</code> to <code>zend_string</code> in <a href="https://github.com/php/php-src/pull/9086">GH-9086</a> in <a href="https://github.com/php/php-src/commit/c8f4801382">c8f4801382</a> by George Peter Banyard 💜</li>
<li>Fix shift in <code>rand_rangeXX()</code> in <a href="https://github.com/php/php-src/pull/9088">GH-9088</a> in <a href="https://github.com/php/php-src/commit/ab5491f505">ab5491f505</a> by Tim Düsterhus</li>
<li>[<code>run-tests.php</code>] Improve non-optimal nested <code>if</code>/<code>elseif</code>/<code>else</code> blocks with happy path optimizations in <a href="https://github.com/php/php-src/commit/51447fb47d">51447fb47d</a> by Ayesh Karunaratne</li>
<li>[<code>run-tests.php</code>] Minor optimizations in <code>if</code> blocks by placing simple expressions first in <a href="https://github.com/php/php-src/commit/056afc8daf">056afc8daf</a> by Ayesh Karunaratne</li>
<li>[<code>run-tests.php</code>] Merge multiple <code>unset()</code> calls to a single call in <a href="https://github.com/php/php-src/commit/f958701dad">f958701dad</a> by Ayesh Karunaratne</li>
<li>[<code>run-tests.php</code>] Replace backtick operator string literals with <code>shell_exec()</code> calls in <a href="https://github.com/php/php-src/commit/c83a10d8db">c83a10d8db</a> by Ayesh Karunaratne</li>
<li>[<code>run-tests.php</code>] Combine multiple <code>str_replace</code> calls to a single <code>strtr</code> call in <a href="https://github.com/php/php-src/commit/3483a1f170">3483a1f170</a> by Ayesh Karunaratne</li>
<li>[<code>run-tests.php</code>] echo call performance optimization in <a href="https://github.com/php/php-src/commit/0490f082e9">0490f082e9</a> by George Peter Banyard 💜</li>
<li>crc32 Aarch64 add crc feature to <code>crc32_aarch64</code> from clang Closes #8916 in <a href="https://github.com/php/php-src/commit/77bd39a116">77bd39a116</a> by David CARLIER</li>
<li>Add support for stubs to declare intersection type class properties in <a href="https://github.com/php/php-src/pull/8751">GH-8751</a> in <a href="https://github.com/php/php-src/commit/4457dba1fb">4457dba1fb</a> by George Peter Banyard 💜</li>
<li>Fix memory leak in fiber constructor by throwing an error in <a href="https://github.com/php/php-src/pull/9098">GH-9098</a> in <a href="https://github.com/php/php-src/commit/0adbf9c2d4">0adbf9c2d4</a> by Martin Schröder</li>
<li>Fix typo in <code>lob_prefetch_ini.phpt</code> test in <a href="https://github.com/php/php-src/pull/9099">GH-9099</a> in <a href="https://github.com/php/php-src/commit/fc42098c23">fc42098c23</a> by Michael Voříšek</li>
<li>Use <code>-1</code> “precision” in <code>gen_stub.php</code> in <a href="https://github.com/php/php-src/pull/8734">GH-8734</a> by Michael Voříšek</li>
<li>Remove dead code in <code>ext/random/random.c</code> in <a href="https://github.com/php/php-src/pull/9114">GH-9114</a> in <a href="https://github.com/php/php-src/commit/395b6a9674">395b6a9674</a> by Tim Düsterhus</li>
<li>Add comment in GDBM informing to what param the 0 org corresponds to in <a href="https://github.com/php/php-src/commit/c8ba00f627">c8ba00f627</a> by George Peter Banyard 💜</li>
<li>Remove personalisation from write on <code>readonly</code> db DBA error message in <a href="https://github.com/php/php-src/commit/0887a1d7ab">0887a1d7ab</a> by George Peter Banyard 💜</li>
<li>Pass <code>MDB_RDONLY</code> to the LMDB environment for readonly DBs in <a href="https://github.com/php/php-src/commit/79d831ff9f">79d831ff9f</a> by George Peter Banyard 💜</li>
<li>Add support to pass driver flags to DBA handlers in <a href="https://github.com/php/php-src/commit/3c372901bd">3c372901bd</a> by George Peter Banyard 💜</li>
<li>Fix memory leak on <code>Randomizer::__construct()</code> call twice in <a href="https://github.com/php/php-src/pull/9091">GH-9091</a> in <a href="https://github.com/php/php-src/commit/34b352d121">34b352d121</a> by Go Kudo</li>
<li>Improve error reporting in random extension in <a href="https://github.com/php/php-src/pull/9071">GH-9071</a> in <a href="https://github.com/php/php-src/commit/60f149f7ad">60f149f7ad</a> by Tim Düsterhus</li>
<li>zend defines attribute malloc for Win32 as returned pointer are not aliased Closes #9118 in <a href="https://github.com/php/php-src/commit/53ae24e435">53ae24e435</a> by David Carlier</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9033">GH-9033</a>: Loading blacklist file can fail due to negative length in <a href="https://github.com/php/php-src/pull/9036">GH-9036</a> by Christoph M. Becker</li>
<li>Initialize <code>blacklist_path_length</code> in <a href="https://github.com/php/php-src/pull/9129">GH-9129</a> by Christoph M. Becker</li>
<li>sockets ext for solaris update in <a href="https://github.com/php/php-src/commit/9090e2602e">9090e2602e</a> by David Carlier</li>
<li>Skip locale tests /w musl libc in <a href="https://github.com/php/php-src/pull/9141">GH-9141</a> in <a href="https://github.com/php/php-src/commit/60189aa96a">60189aa96a</a> by Michael Voříšek</li>
<li>Amend DBA error message to use standard messaging in <a href="https://github.com/php/php-src/commit/04f6fe4b25">04f6fe4b25</a> by George Peter Banyard 💜</li>
<li>Remove <code>-&gt;last_unsafe</code> from <code>php_random_status</code> in <a href="https://github.com/php/php-src/pull/9132">GH-9132</a> in <a href="https://github.com/php/php-src/commit/5c693c770a">5c693c770a</a> by Tim Düsterhus</li>
<li>The hashvalue/index of a bucket is a <code>zend_ulong</code> in <a href="https://github.com/php/php-src/commit/bdf5a4e478">bdf5a4e478</a> by George Peter Banyard 💜</li>
<li>Use <code>uint32_t</code> in <code>Z_PARAM_VARIADIC_WITH_NAMED</code> in <a href="https://github.com/php/php-src/commit/9115211ebf">9115211ebf</a> by George Peter Banyard 💜</li>
<li>Restrict range of <code>buffer_length</code> on all platforms to <code>INT_MAX</code> in <a href="https://github.com/php/php-src/pull/9126">GH-9126</a> by Christoph M. Becker</li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=69181">#69181</a>: <code>READ_CSV|DROP_NEW_LINE</code> drops newlines within fields in <a href="https://github.com/php/php-src/pull/7618">GH-7618</a> by Christoph M. Becker</li>
<li>Use <code>ValueError</code> if an invalid mode is passed to <code>Mt19937</code> in <a href="https://github.com/php/php-src/pull/9159">GH-9159</a> in <a href="https://github.com/php/php-src/commit/d058acb4ac">d058acb4ac</a> by Tim Düsterhus</li>
<li><a href="https://github.com/php/php-src/issues/9157">GH-9157</a>: opcache fix build on older macOs releases. Closes #9158 in <a href="https://github.com/php/php-src/commit/099b16800c">099b16800c</a> by David CARLIER</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9090">GH-9090</a>: Support assigning function pointers in FFI in <a href="https://github.com/php/php-src/pull/9107">GH-9107</a> by Adam Saponara</li>
<li>Tweak <code>openssl_random_pseudo_bytes()</code> upper bound error message in <a href="https://github.com/php/php-src/commit/5d62cfbc7d">5d62cfbc7d</a> by Christoph M. Becker</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9155">GH-9155</a>: <code>dba_open(“non-existing”, “c-”, “flatfile”)</code> segfaults in <a href="https://github.com/php/php-src/pull/9156">GH-9156</a> by Christoph M. Becker</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9032">GH-9032</a>: SQLite3 authorizer crashes on NULL values in <a href="https://github.com/php/php-src/pull/9040">GH-9040</a> by Christoph M. Becker</li>
<li>Fix get/set priority - error handling for MacOS and extra tests in <a href="https://github.com/php/php-src/pull/9044">GH-9044</a> by jcm</li>
<li>Avoid using a stack allocated zend_function in Closure::call, to avoid prevent crashes on bailout in <a href="https://github.com/php/php-src/commit/b576bb901e">b576bb901e</a> by Bob Weinand</li>
<li>Fix property fetch on magic constants in constant expressions in <a href="https://github.com/php/php-src/pull/9136">GH-9136</a> by Ilija Tovilo 💜</li>
<li>Escape <code>\U</code> and <code>\u</code> in generated stubs in <a href="https://github.com/php/php-src/pull/9154">GH-9154</a> by Andreas Braun</li>
<li>Drop Windows specific implementation of <code>openssl_random_pseudo_bytes()</code> in <a href="https://github.com/php/php-src/pull/9153">GH-9153</a> by Christoph M. Becker</li>
<li>Do not add inherited interface methods to the class synopsis page in <a href="https://github.com/php/php-src/commit/b56492be9c">b56492be9c</a> by Máté Kocsis 💜</li>
<li>Improve error messages in <code>php_random_bytes()</code> in <a href="https://github.com/php/php-src/pull/9169">GH-9169</a> by Tim Düsterhus</li>
<li>Improve DBA test suite in <a href="https://github.com/php/php-src/pull/8904">GH-8904</a> by George Peter Banyard 💜</li>
<li>Refactor code handling <code>file.current_zval</code> in <a href="https://github.com/php/php-src/pull/8934">GH-8934</a> by George Peter Banyard 💜</li>
</ul>

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>A special mention goes to <a href="https://mailcoach.app/">mailcoach.app</a> for providing us with a platform for the newsletter.</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content><link href="https://thephp.foundation/blog/2022/07/28/php-core-roundup-4/"/><id>https://thephp.foundation/blog/2022/07/28/php-core-roundup-4/</id><pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate><author><name>Ayesh Karunaratne</name><uri>https://aye.sh</uri></author></entry><entry><title type="html"><![CDATA[PHP Core Roundup #2]]></title><content type="html"><![CDATA[<p>Welcome back to round #2 of <em>PHP Core Roundup</em>, where we’ll make regular updates on the improvements made to PHP by the PHP Foundation and other contributors. In this second one in the series, we have news about the upcoming PHP 8.2 release, some new RFCs accepted, voted, and being discussed, and some further improvements to PHP made in the past few weeks.</p>

<p>You don’t necessarily have to be a PHP Foundation backer to follow the PHP Roundup. We’ll be publishing the posts on our website, and you can subscribe to a newsletter:</p>

<div class="px-4 pt-3 pb-10 mb-6 border-b border-t -mx-4 border-gray-200">
    <div class="max-w-xl mx-auto">
        <h2 class="text-xl text-left inline-block font-semibold text-gray-800 mb-1">Subscribe to PHP Foundation Updates</h2>
        <form method="POST" action="https://php-foundation-mailcoach.com/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056" class="mt-2">
            <div class="flex items-center">
                <input placeholder="Your email address" type="email" class="w-full px-2 py-4 mr-2  bg-gray-100 shadow-inner rounded-md border border-gray-400 focus:outline-none" name="email" required>
                <button class="bg-[#7f52ff] text-gray-200 px-5 py-2 rounded shadow " style="margin-left: -7.8rem;">Sign Up</button>
            </div>
        </form>
    </div>
</div>

<p>The PHP Foundation currently supports six part-time PHP contributors who work on both maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>

<h2 id="php-8.2-release-managers">PHP 8.2 Release Managers</h2>

<p>For each major version of PHP (such as PHP 7.4, 8.0, 8.1, and 8.2), PHP core developers vote and elect one or two release managers along with a veteran PHP core developer who has been a release manager before.</p>

<p>PHP Release managers are responsible for tagging and creating PHP releases throughout the lifecycle of that PHP version, including the alpha/beta/RC releases, and security releases as well as regular patch versions. Lasting for about three and half years, the release managers have the final say last-minute RFCs as well.</p>

<p>For the upcoming PHP 8.2, we had <a href="https://wiki.php.net/todo/php82">7 candidates</a>, with Ben Ramsey, one of the PHP 8.1 release managers stepping in as the veteran release manager. After a poll that ended on May 18, Sergey Panteleev and Pierrick Charron were elected as rookie release managers.</p>

<p>Congratulations Sergey, Pierrick, and Ben on being PHP 8.2 release managers!</p>

<h2 id="rfc-updates">RFC Updates</h2>

<p>Every major change to PHP is discussed and implemented with the consensus of the PHP community. Each RFC proposes a set of changes, and the PHP Internals community holds a vote that lasts two weeks by default.</p>

<p>Things marked with 💜 are done by the PHP Foundation team.</p>

<ul>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/deprecate_dollar_brace_string_interpolation">Deprecate ${} string interpolation</a> 💜</strong></p>

<p>RFC by Ilija Tovilo was accepted with 31:1 votes in favor, and is now implemented in PHP core. This RFC proposes to deprecate string interpolation with <code>${var}</code> and <code>${expr}</code> patterns with <code>{$var}</code> and <code>{${expr}}</code> patterns.</p>

<p>On top 1,000 most downloaded packages as per Packagist data, over 40 packages contained at least one occurrence of this now-deprecated pattern. Fixes are being made to the libraries, you can help out by testing your libraries and submitting pull-requests to the relevant repositories.</p>

<p>This RFC is likely to be followed up with another RFC vote to decide whether the deprecated string interpolation patterns should throw an error, or silently ignored in PHP 9.0</p>

<p>Learn more about this RFC on <a href="https://php.watch/versions/8.2/$%7Bvar%7D-string-interpolation-deprecated">PHP.Watch</a>.</p></li>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/readonly_classes">Readonly Classes</a> 💜</strong></p>

<p>Máté Kocsis follows up PHP 8.1 readonly properties feature with support for marking the entire class as readonly in this new RFC. In PHP 8.2, all properties (must be typed) of the class will be implicitly readonly if the class is declared as readonly.</p>

<p>Learn more about this RFC on <a href="https://php.watch/versions/8.2/readonly-classes">PHP.Watch</a>.</p></li>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/mysqli_execute_query">MySQLi Execute Query</a></strong></p>

<p>RFC by Kamil Tekiela and Craig Francis was accepted unanimously with 24 votes. This RFC proposes to add a new <code>mysqli_execute_query</code> function to the MySQLi extension that greatly simplifies the multiple function calls it required to prepare, bind parameters, execute, and retrieve data with mysqli_prepare/execute/stement_get_result functions.</p>

<p>Learn more about this RFC on <a href="https://php.watch/versions/8.2/mysqli_execute_query">PHP.Watch</a>.</p></li>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/undefined_property_error_promotion">Undefined Property Error Promotion</a></strong></p>

<p>RFC by Mark Randall proposes to throw an error on undefined class property access, similar to the now accepted changes with undefined variables. Notably, PHP 8.2 already emits deprecation notices on dynamic property creation (<a href="https://php.watch/versions/8.2/dynamic-properties-deprecated#exempt">with a few exceptions</a>).</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/partially-supported-callables-expand-deprecation-notices">Expand deprecation notice scope for partially supported callables</a></strong></p>

<p>Juliette Reinders Folmer follows up on the <a href="https://wiki.php.net/rfc/deprecate_partially_supported_callables">Deprecate partially supported callables RFC</a> (implemented in PHP 8.2) to widen the scope of the deprecation to include is_callable function and when type verification is executed on the callable type.</p>

<p>Learn more about this RFC on <a href="https://phpinternals.news/101">PHP Internals News Podcast</a> hosted by Derick Rethans.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/stricter_implicit_boolean_coercions">Stricter implicit boolean coercions</a></strong></p>

<p>RFC by Andreas Leathley is currently under discussion, which discovers ways how various types are coerced with boolean values. A <a href="https://externals.io/message/117732">lengthy discussion</a> is underway.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/fetch_property_in_const_expressions">Fetching properties in constant expressions</a> 💜</strong></p>

<p>RFC by Ilija Tovilo proposes adding support for fetching properties in constant expressions using the <code>-&gt;</code> operator. This will make it possible to fetch the name and value of enums in constant expressions.</p></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Some of the minor changes made to PHP are first made as a pull request to the <a href="http://github.com/php/php-src">PHP GitHub project</a>, and if deemed acceptable by PHP core maintainers, they are merged without going through a formal RFC process. We have automatic tests in place to flag PRs that break existing functionality. The majority of the minor changes from the community are made through PRs.</p>

<ul>
<li>New: Curl extension support for <code>CURLOPT_MAXFILESIZE_LARGE</code> and <code>CURLOPT_XFERINFOFUNCTION</code> options in PR <a href="https://github.com/php/php-src/pull/7823">#7823</a> and <a href="https://github.com/php/php-src/pull/8557">#8557</a> by David Carlier.</li>
<li>New: Add <code>ReflectionMethod::hasPrototype()</code> in PR <a href="https://github.com/php/php-src/pull/8487">#8487</a> by Ollie Read.</li>
<li>New: Add <code>ReflectionFunction::isAnonymous()</code> in PR <a href="https://github.com/php/php-src/pull/8499">#8499</a> by Nicolas Grekas.</li>
<li>New: Socket extension support for <code>TCP_NOTSENT_LOWAT</code> and <code>SO_MEMINFO</code> options in PR <a href="https://github.com/php/php-src/pull/8559">#8559</a> and commit <a href="https://github.com/php/php-src/commit/2410e378c1729df267b0be82e9c7ab8a47b9a6a6">2410e378</a> by David Carlier.</li>
<li>New: <code>idate()</code> now accepts format specifiers "N" (ISO Day-of-Week) and "o" (ISO Year) in commit <a href="https://github.com/php/php-src/commit/12702a20474635605cd7f08a9d0e1acac3a5f078">12702a20</a> by Pavel Djundik.</li>
<li>Improved: Tidy extension’s tidy class properties are now typed, and tidyNode properties are declared readonly. PR <a href="https://github.com/php/php-src/pull/8515">#8515</a> by Máté Kocsis 💜.</li>
<li>Improved: It is now possible to declare constants in stubs. This change will make it easier to keep the manual always up-to-date as well as static analyzers to get type information about constants. PR <a href="https://github.com/php/php-src/pull/7434">#7434</a> by Máté Kocsis 💜.</li>
<li>Changed: Build <code>ext/zip</code> as shared library by default on Windows in PR <a href="https://github.com/php/php-src/pull/8549">#8549</a> by Christoph M. Becker.</li>
<li>Fixed: Bug <a href="https://github.com/php/php-src/issues/8548">#8548</a>  <code>stream_wrapper_unregister()</code> memory leak in PR <a href="https://github.com/php/php-src/pull/8587">#8587</a> by Ilija Tovilo 💜.</li>
<li>Fixed: <code>ini_get()</code> could be optimized-out by the optimizer in PR <a href="https://github.com/php/php-src/pull/8507">#8507</a> by Arnaud Le Blanc 💜.</li>
<li>Fixed: Crash while unregistering <code>dl()’</code>-ed extension in ZTS in PR <a href="https://github.com/php/php-src/pull/8435">#8435</a> by Arnaud Le Blanc 💜.</li>
<li>Fixed: Add JIT guards for <code>INIT_METHOD_CALL</code> when the method may be modified PR <a href="https://github.com/php/php-src/pull/8600">#8600</a> by Arnaud Le Blanc 💜.</li>
<li>Fixed: Datetime format string to follow POSIX spec in <code>ftp_mdtm</code> in PR <a href="https://github.com/php/php-src/pull/8259">#8259</a> by Jihwan Kim.</li>
<li>Fixed: <code>parse_url()</code> can not recognize port without scheme in PR <a href="https://github.com/php/php-src/pull/7844">#7844</a> by @pandaLIU.</li>
<li>Fixed bug #72185: php-fpm writes empty fcgi record causing nginx 502 by Jakub Zelenka and @loveharmful 💜.</li>
<li>Fixed: Bug #79589: ssl3_read_n:unexpected eof while reading by Jakub Zelenka 💜.</li>
<li>Fixed: Memory leak in <code>Enum::from</code>/<code>tryFrom</code> when type coercion occurs in internal enums in PR <a href="https://github.com/php/php-src/pull/8633">#8633</a> by Ilija Tovilo 💜.</li>
<li>Improved: Add internal C API for fetching backed enums by value in PR <a href="https://github.com/php/php-src/pull/8518">#8518</a> by Ilija Tovilo</li>
<li>Fixed: Several bug fixes in Date extension by Derick Rethans 💜.

<ul>
<li>Bug <a href="https://bugs.php.net/bug.php?id=51987">#51987</a> DateTime fails to parse an ISO 8601 ordinal date (extended format) in PR #8589.</li>
<li><code>DateInterval::createFromDateString</code> does not throw if non-relative items are present in PR <a href="https://github.com/php/php-src/issues/8458">#8458</a>.</li>
<li>Bug <a href="https://bugs.php.net/bug.php?id=72963">#72963</a> Null-byte injection in <code>DateTime::createFromFormat</code> and related functions.</li>
<li>Bug <a href="https://github.com/php/php-src/issues/8471">#GH-8471</a> Segmentation fault when converting immutable and mutable <code>DateTime</code> instances created using reflection in PR <a href="https://github.com/php/php-src/pull/8497">#8497</a>.</li>
<li>Bug <a href="https://bugs.php.net/bug.php?id=68549">#68549</a> Timezones and offsets are not properly used when working with dates in PR <a href="https://github.com/php/php-src/pull/8589">#8589</a>.</li>
<li>Updated to timelib 2021.12 in PR <a href="https://github.com/php/php-src/pull/8589">#8589</a> by Derick Rethans 💜. Also fixes bug <a href="https://bugs.php.net/bug.php?id=51934">#51934</a>, <a href="https://github.com/php/php-src/issues/7758">GH-7758</a>, <a href="https://bugs.php.net/bug.php?id=68549">#68549</a>, <a href="https://bugs.php.net/bug.php?id=66019">#66019</a>, and <a href="https://bugs.php.net/bug.php?id=81565">#81565</a>.</li>
<li>Bug <a href="https://bugs.php.net/bug.php?id=52015">#52015</a> Allow including end date in <code>DatePeriod</code> iterations in PR <a href="https://github.com/php/php-src/pull/8550">#8550</a>.</li>
<li>DatePeriod properties are also going to be properly declared as readonly soon (PR <a href="https://github.com/php/php-src/pull/8534">#8534</a>).</li>
<li>Bug <a href="https://bugs.php.net/bug.php?id=74671">#74671</a> DST timezone abbreviation has incorrect offset in PR <a href="https://github.com/php/php-src/pull/8595">#8595</a>.</li>
<li>Bug <a href="https://bugs.php.net/bug.php?id=78139">#78139</a>  <code>timezone_open</code> accepts invalid timezone string argument in PR <a href="https://github.com/php/php-src/pull/8595">#8595</a>.</li>
</ul></li>
</ul>

<p>Apart from the highlighted changes above, there have been more improvements and fixes from Alex Dowad, Nikita Popov, Dmitry Stogov, and more contributors.</p>

<h2 id="mailing-list-discussions">Mailing List Discussions</h2>

<ul>
<li><a href="https://externals.io/message/117678">The future of objects and operators</a> started by Jordan LeDoux as a follow-up to previously declined <a href="https://wiki.php.net/rfc/user_defined_operator_overloads">Operator overloading RFC</a>.</li>
<li><a href="https://externals.io/message/117501">NULL Coercion Consistency</a> started by Craig Francis.</li>
<li><a href="https://externals.io/message/117732">Stricter implicit boolean coercions</a> started by Andreas Leathley.</li>
<li><a href="https://github.com/php/php-src/issues/8420">Body-less methods</a> started by Aleksei Gagarin.</li>
</ul>

<h2 id="other-news">Other News</h2>

<ul>
<li><a href="https://www.npopov.com/2022/05/22/The-opcache-optimizer.html">The opcache optimizer</a> – blog post by Nikita Popov.</li>
<li><a href="https://blog.jetbrains.com/phpstorm/2022/05/php-annotated-may-2022/">PHP Annotated</a> – for more news and links from the userland PHP community.</li>
</ul>

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>A special mention goes to <a href="https://mailcoach.app/">mailcoach.app</a> for providing us with a platform for the newsletter.</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content><link href="https://thephp.foundation/blog/2022/05/30/php-core-roundup-2/"/><id>https://thephp.foundation/blog/2022/05/30/php-core-roundup-2/</id><pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate><author><name>Ayesh Karunaratne</name><uri>https://aye.sh</uri></author></entry><entry><title type="html"><![CDATA[PHP Core Roundup #3]]></title><content type="html"><![CDATA[<p>Welcome back to the <em>PHP Core Roundup</em> series, where we make regular updates on the improvements made to PHP by the <em>PHP Foundation</em> and other contributors.</p>

<p>In this edition, we have news about PHP 8.2 that is only three weeks away from its feature-freeze, and several improvements made by the PHP Foundation team and contributors.</p>

<p>You don’t necessarily have to be a PHP Foundation backer to follow the PHP Roundup. We’ll be publishing the posts on our website, and you can subscribe to the newsletter:</p>

<div class="px-4 pt-3 pb-10 mb-6 border-b border-t -mx-4 border-gray-200">
    <div class="max-w-xl mx-auto">
        <h2 class="text-xl text-left inline-block font-semibold text-gray-800 mb-1">Subscribe to PHP Foundation Updates</h2>
        <form method="POST" action="https://php-foundation-mailcoach.com/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056" class="mt-2">
            <div class="flex items-center">
                <input placeholder="Your email address" type="email" class="w-full px-2 py-4 mr-2  bg-gray-100 shadow-inner rounded-md border border-gray-400 focus:outline-none" name="email" required>
                <button class="bg-[#7f52ff] text-gray-200 px-5 py-2 rounded shadow " style="margin-left: -7.8rem;">Sign Up</button>
            </div>
        </form>
    </div>
</div>

<blockquote>
  <p><a href="https://opencollective.com/phpfoundation">The PHP Foundation</a> currently supports <a href="https://thephp.foundation/blog/2022/05/06/interview-with-core-developers/">six part-time PHP contributors</a> who work on both maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
  
  <p>Things marked with 💜 are done by the PHP Foundation team.</p>
</blockquote>

<p><br /></p>

<h2 id="php-8.2-qa-releases-and-feature-freeze">PHP 8.2 QA Releases and Feature-freeze</h2>

<p>The upcoming PHP 8.2 version is scheduled to be released on <strong>November 24</strong>. The newly <a href="https://thephp.foundation/blog/2022/05/30/php-core-roundup-2/#php-8.2-release-managers">elected PHP 8.2 release managers</a> made the first QA release of PHP 8.2 — PHP 8.2 Alpha 1 — on June 09, and the second alpha release on June 23.</p>

<p>These alpha releases are not meant for any production servers, but serve as point releases for testing environments and local development setups.</p>

<p>Compiled Windows binaries are available at <a href="https://windows.php.net/qa/">windows.php.net/qa</a>, <a href="https://hub.docker.com/_/php?tab=tags&amp;page=1&amp;name=8.2.0">Docker images</a> are available at Docker Hub, and source code at <a href="https://github.com/php/php-src">php/php-src repository on GitHub</a> to compile yourself. On Homebrew, PHP 8.2-dev packages are available from <a href="https://github.com/shivammathur/homebrew-php"><code>shivammathur/php</code></a> tap.</p>

<p><strong>July 19</strong> is the PHP 8.2 Feature-Freeze date. The window for submitting major changes to PHP 8.2 ends on this date. PHP follows a two week discussion period and a two week voting period. All RFCs must be voted (and passed) before the feature-freeze to be included in PHP 8.2.</p>

<h2 id="rfc-updates">RFC Updates</h2>

<p>Following are the RFCs discussed, voted, and implemented since our last update.</p>

<ul>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/null-false-standalone-types">Allow null and false as stand-alone types</a> 💜</strong></p>

<p>RFC by George Peter Banyard proposed to allow null and false as standalone types in PHP. With the addition of Union Types in PHP 8.0, it was possible to declare a Union Type with <code>null</code> and <code>false</code>, but not as stand-alone types. With this change, it is now possible to declare class properties, parameters, and return types with <code>null</code> and <code>false</code> as stand-alone types. They are already reserved keywords in PHP, and this change is highly unlikely to cause any backwards compatibility issues.</p>

<p>Learn more about this RFC in <a href="https://phpinternals.news/99">PHP Internals News Podcast #99</a> <strong>💜</strong>, hosted by Derick Rethans, and on <a href="https://php.watch/versions/8.2/null-false-types">PHP.Watch</a>.</p></li>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/true-type">Add true type</a> 💜</strong></p>

<p>Another RFC by George Peter Banyard proposes to add <code>true</code> as a valid and standalone type to PHP. This RFC, along with RFC to allow <code>null</code> and <code>false</code> as standalone types, makes PHP’s type system more expressive and precise.</p>

<p>Learn more about this RFC in <a href="https://phpinternals.news/102">PHP Internals News Podcast #102</a>, hosted by Derick Rethans, and on <a href="https://php.watch/versions/8.2/true-type">PHP.Watch</a>.</p></li>
<li><p><strong>Accepted: Random Extension 5.x</strong></p>

<p>Random Extension 5.x RFC, as the name implies, is the fifth iteration of the RFC proposed by Go Kudo to improve PHP’s Random Number Generator (RNG). It proposes a series of changes starting from moving the RNG to a separate PHP extension, and providing multiple choices of the RNGs in an object-oriented API pattern. It does not propose to change the existing user-land <code>random_int</code> and <code>random_bytes</code> functions, but rather refactor the internals of the RNG.</p>

<p>There is a <a href="https://wiki.php.net/rfc/random_extension_improvement">follow-up RFC</a> currently being discussed to make further improvements to it.</p></li>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/partially-supported-callables-expand-deprecation-notices">Expand deprecation notice scope for partially supported callables</a></strong></p>

<p>Juliette Reinders Folmer’s RFC that follows up on the <a href="https://wiki.php.net/rfc/deprecate_partially_supported_callables">Deprecate partially supported callables RFC</a> (implemented in PHP 8.2) to widen the scope of the deprecation to include <code>is_callable</code> function and when type verification is executed on the <code>callable</code> type was accepted.</p>

<p>Learn more about this RFC from the <a href="https://phpinternals.news/101">PHP Internals News Podcast #101</a> hosted by Derick Rethans<strong>.</strong></p></li>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/dnf_types">Disjunctive Normal Form Types</a> 💜</strong></p>

<p>Yet another RFC by George Peter Banyard that proposes to add Disjunctive Normal Form types to the language.</p>

<p>PHP has support for Union Types (<code>foo|bar</code>) since PHP 8.0, and Intersection Types (<code>foo&amp;bar</code>) since PHP 8.1. The DNF Types RFC proposes to add support for combining Union and Intersection types to declare a type in a canonical form.</p>

<p>This RFC is currently in voting, with a majority of votes in favor. With only two days left on the vote, it is highly likely that this RFC will pass.</p>

<p>Learn more about this RFC from the <a href="https://phpinternals.news/103">PHP Internals News Podcast #103</a> hosted by Derick Rethans.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/curl-url-api">New Curl URL API</a></strong></p>

<p>RFC by Pierrick Charron discusses improvements to the Curl extension including the possibility to introduce a new <code>CurlUrl</code> class to build, query, and validate a URL using the same mechanisms Curl uses.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/fetch_property_in_const_expressions">Fetch properties of enums in const expressions</a> 💜</strong></p>

<p>Ilija Tovilo proposes to add support to fetch Enum properties in constant expressions. In PHP Enums, each enumerated member has name and value properties.</p>

<pre><code class="php">const VALUE = 'value';
const C = E::Foo-&gt;name;
const C = E::Foo-&gt;{VALUE};
function foo($param = E::Foo-&gt;value) {}

#[Attr(E::Foo-&gt;name)]
class C {}
</code></pre>

<p><br />
 The RFC is to allow expressions above and other similar patterns, which are not currently allowed.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/pdo_driver_specific_subclasses">PDO driver specific sub-classes</a></strong></p>

<p>RFC by Dan Ackroyd proposes to add new subclasses (with PDO as the parent) for individual database drivers so they can introduce their own additions to the PDO class easily. Some of the use cases mentioned in the RFC include PostgreSQL and Sqlite drivers that could declare methods to functionality that are unique to that software.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/iterator_xyz_accept_array">Make the iterator_*() family accept all iterables </a></strong></p>

<p>RFC by Tim Düsterhus proposes to widen the type of $iterator parameter of <code>iterator_to_array()</code> and <code>iterator_count()</code> functions to iterable, from the current type \Traversable. The difference is that the <code>iterable</code> type includes array type as well (i.e <code>\Traversable|array</code>). By widening the parameter type, these functions will be able to handle <code>array</code> values as well.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/constants_in_traits">Constants in Traits</a></strong></p>

<p>Shinji Igarashi proposes in this RFC to allow declaring constants in PHP traits. The proposal details that direct access to the constants with trait name will not be allowed (i.e <code>MyTrait::FOO</code>), and enforces some additional composing rules. Constants declared in traits will also suppose visibility and final constants too.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/auto-implement_stringable_for_string_backed_enums">Auto-implement Stringable for string backed enums</a> 💜</strong></p>

<p>In this RFC, Ilija Tovilo and Nicolas Grekas propose that string-backed enums auto-implement <code>Stringable</code>, while continuing to disallow user-land implementations of the method (<code>__toString()</code>). One of the use cases this RFC intends to solve is with Symfony’s use of attributes that the attribute expects a string value, but it is not possible to to pass the name or value property of Enums directly. The <a href="">Fetch properties of enums in const expressions RFC</a> might also solve this problem with a different approach.</p></li>
<li><p><strong>Under Discussion: <a href="https://wiki.php.net/rfc/auto-capture-closure">Short Closures 2.0</a> 💜</strong></p>

<p>Originally this RFC was co-authored by Nuno Maduro and Larry Garfield. Now Arnaud Le Blanc took over and significantly reworked the implementation. It proposes to allow multiple statements in anonymous functions using the short function syntax. For example, the following snippet will be valid, should the RFC is voted on and implemented:</p>

<pre><code class="php">$guests = array_filter($users, fn ($user) {
    $guest = $repository-&gt;findByUserId($user-&gt;id);
    return $guest !== null &amp;&amp; in_array($guest-&gt;id, $guestsIds);
});
</code></pre>

<p>Currently, the <code>fn</code> syntax does not allow multiple statements inside the function body, and this RFC proposes to remove this limitation.</p></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some of the changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes, and all pull requests are reviewed by the PHP core developers.</p>

<ul>
<li>Bug fixes and improvements in Date extension by Derick Rethans 💜

<ul>
<li>Bug <a href="https://bugs.php.net/bug.php?id=80047">#80047</a>: DatePeriod doesn't warn with custom <code>DateTimeImmutable</code> in commit <a href="https://github.com/php/php-src/commit/973c3f6e241227ffc14c3608c774d7636b798cec">973c3f6</a></li>
<li>Bug <a href="https://bugs.php.net/bug.php?id=77243">#77243</a>: Weekdays are calculated incorrectly for negative years in PR <a href="https://github.com/php/php-src/pull/8740">#8740</a></li>
<li>Fixed tests that relied on <code>date.timezone=UTC</code> to work in commit <a href="https://github.com/php/php-src/commit/242b9438ea1f9a7f72afe1db5cd8f3bf80152dc5">242b943</a></li>
<li>Bug <a href="https://bugs.php.net/bug.php?id=73239">#73239</a>: DateTime shows strange error message with invalid timezone in PR <a href="https://github.com/php/php-src/pull/8594">#8594</a></li>
</ul></li>
<li>Bug fixes and improvements in Opcache by Dmitry Stogov,  Ilija Tovilo, and Derick Rethans 💜

<ul>
<li>Bug <a href="https://github.com/php/php-src/issues/8863">GH-8863</a>: RW operation on readonly property doesn't throw with JIT in commit <a href="https://github.com/php/php-src/commit/ad40fffd36cab87c249c28af6374c72959937dd6">ad40fffd</a></li>
<li>Fix incorrect constant propagation for <code>VERIFY_RETURN_TYPE</code> in commit <a href="https://github.com/php/php-src/commit/fa75bd078511c80c8be655719c7681fa65798c13">fa75bd07</a></li>
<li>JIT: Fix incorrect reference-counting in commit <a href="https://github.com/php/php-src/commit/971b07ea60172a80ee308e91c7a7912eea8a571f">971b07ea</a></li>
<li>JIT: Fix missing register store in commit <a href="https://github.com/php/php-src/commit/1cd8074743d1a13529cf2dbd72bfb2b0ea0ffe25">1cd8074</a></li>
<li>Memory leak fixes in commits <a href="https://github.com/php/php-src/commit/229e80c6ef507cc26dbd02f0b392f270e1fb6ebe">229e80c6</a>, <a href="https://github.com/php/php-src/commit/088e5677fbfa41d0c66d756e3076b30c500db126">088e5677fb</a>, <a href="https://github.com/php/php-src/commit/3a8912fb7c97ea5a8490037d45224230be10625d">3a8912fb7c9</a>, <a href="https://github.com/php/php-src/commit/f135ed9a8a5da2968be8cf534c21882d274d10fb">f135ed9a</a>, and <a href="https://github.com/php/php-src/commit/229e80c6ef507cc26dbd02f0b392f270e1fb6ebe">229e80c6</a>.</li>
<li>Type inference fixes in commits <a href="https://github.com/php/php-src/commit/05375602a756e8ca7220480bdb8cec5b8bdd1f0d">05375602a</a>, <a href="https://github.com/php/php-src/commit/b86c6245cc7dd739a526c29748725b59926b17cc">b86c6245</a>, <a href="https://github.com/php/php-src/commit/1b45efb6fb9dd37c2c6f2079ba2ab851f12e84e0">1b45efb6fb9dd</a>, and <a href="https://github.com/php/php-src/commit/729be469ae1c50251607b8978647f8b510b45b46">729be469</a></li>
<li>JIT: Add Indirect Branch Tracking (IBT) support with Chen, Hu in PR <a href="https://github.com/php/php-src/pull/8774">#8774</a></li>
<li>Fully convert <code>accel_remap_huge_pages</code> to use zend_result in commit <a href="https://github.com/php/php-src/commit/0429159775658f9b9f81d67e4206cf449da01679">0429159</a></li>
<li>Remove redundant address comparison in <code>accel_remap_huge_pages</code> in commit <a href="https://github.com/php/php-src/commit/1380b65d261d1ab2e2e920173b836cd95325c8a0">1380b65d</a></li>
<li>Fixed bug<a href="https://github.com/php/php-src/issues/8847"> GH-8847</a>: PHP hanging infinitely at 100% cpu when check php syntaxes of a valid file in commit <a href="https://github.com/php/php-src/commit/7cf6f173831caea9952a84b9e4a93594aac8ba00">7cf6f173</a></li>
</ul></li>
<li>Several improvements in the Curl extension by Pierrick Charron

<ul>
<li>Add curl_upkeep function in PR <a href="https://github.com/php/php-src/pull/8720/commits">#8720</a></li>
<li>Fixed <code>CURLOPT_TLSAUTH_TYPE</code> is not treated as a string option in commit <a href="https://github.com/php/php-src/commit/d84b972658fe623b465ce0f3b6632de1e1875534">d84b972</a></li>
<li>Expose new constants from libcurl 7.62 to 7.80 in <a href="https://github.com/php/php-src/pull/8720/commits">#8720</a></li>
</ul></li>
<li>Several improvements Mbstring extension by Alex Dowad

<ul>
<li><code>mbfl_strlen</code> does not need to use old conversion filters any more in commit <a href="https://github.com/php/php-src/commit/9468fa7ff2579e2b55da149b01003d3fc796b7c3">9468fa7f</a></li>
<li>Use fast text conversion filters to implement <code>mb_check_encoding</code>  in commit <a href="https://github.com/php/php-src/commit/950a7db9fec125c666d9485e4db79c364fe4c810">950a7db9</a></li>
<li>Use fast conversion filters to implement <code>php_mb_ord</code> in commit <a href="https://github.com/php/php-src/commit/880803a21e9d5ff339add66033d3021bd5ca9dcc">880803a2</a></li>
<li>Assert minimum size of wchar buffer in text conversion filters in commit <a href="https://github.com/php/php-src/commit/8533fccd6332412ec0423b48f7f263317196a14e">8533fccd</a></li>
<li>Fully use available buffer space where converting Base64 in commit <a href="https://github.com/php/php-src/commit/871e61f9429f6eeecc46bc210faa7c59704a2c63">871e61f</a></li>
<li>Restore backwards-compatible mappings of 0x5C and 0x7E in SJIS in commit <a href="https://github.com/php/php-src/commit/2dc9026cbc46c1a76bfac4c8436cb6b293b3e4db">2dc9026c</a></li>
<li>Fast text conversion interfaces for several character encodings</li>
</ul></li>
<li><p>Deprecate <code>zend_atol()</code> / add <code>zend_ini_parse_quantity()</code> in PR <a href="https://github.com/php/php-src/pull/7951">#7951</a> by Sara Golemon and Arnaud Le Blanc 💜</p>

<p>Note that this introduces warnings on INI values for data sizes that PHP used to parse without any prior warnings. Some of the examples of these patterns are “<em><code>123GB</code></em>” (interpretted as “<em><code>123</code></em>”, although the caller likely meant 123 Gigabytes) and “<em><code>123KMG</code></em>” as "<em><code>123G</code></em>" -> <em>132070244352</em>”. This is because  <code>zend_atol()</code> / add <code>zend_ini_parse_quantity()</code> functions accept 'K', 'M', or 'G' as a unit multiplier, but ignore all other non-numeric characters in between.</p></li>
<li>Mark parameters as sensitive (using <code>SensitiveParameter</code> attribute <a href="https://php.watch/versions/8.2/backtrace-parameter-redaction">new in PHP 8.2</a>, <a href="https://wiki.php.net/rfc/redact_parameters_in_back_traces">RFC</a>) in several PHP extensions in PR <a href="https://github.com/php/php-src/pull/8352">#8352</a> by Tim Düsterhus</li>
<li>Don't shortcut empty oparray executions if <code>zend_execute_ex</code> has been overridden in commit <a href="https://github.com/php/php-src/commit/5bfc160817a3b707718cc764661321daffadd402">5bfc1608</a>, so that debugging continues working well by Derick Rethans 💜</li>
<li>Fix phpize to include <code>_GNU_SOURCE</code> by default in commit <a href="https://github.com/php/php-src/commit/2c166647f1a54dfa768b4dda680c5953f54b9c3a">2c166647</a> by Derick Rethans 💜</li>
<li>Zip extension: Implement <code>fseek</code> for zip stream when possible with libzip 1.9.1 in commit <a href="https://github.com/php/php-src/commit/2223853c58087f3c025bf04257f53720e5454036">2223853c</a> by Remi Collet</li>
<li>Zip extension: Fix<a href="https://github.com/php/php-src/issues/8781"> GH-8781</a> <code>ZipArchive::close</code> deletes zip file without updating stat cache in commit <a href="https://github.com/php/php-src/commit/390538af2ed5cd18e3096ad70597035dbca52139">390538a</a> by Remi Collet</li>
<li>FPM: Fixed zlog message prepend, free on incorrect address in commit <a href="https://github.com/php/php-src/commit/325ca31dc">325ca31d</a> by Heiko Weber and David CARLIER</li>
<li>FPM: Fix use after free in <code>fpm_evaluate_full_path</code> in PR <a href="https://github.com/php/php-src/pull/8796">#8796</a> by Heiko Weber</li>
<li>FPM: Fix <code>syslog.indent</code> does not work in PR <a href="https://github.com/php/php-src/pull/8780">#8780</a> by Jakub Zelenka 💜</li>
<li>com_dotnet: Increase test portability in PR <a href="https://github.com/php/php-src/pull/8879">#8879</a> by Christoph M. Becker</li>
<li>Add <code>reallocarray</code> implementation in PR <a href="https://github.com/php/php-src/pull/8871">#8871</a> by David CARLIER</li>
<li>Convert return type of various object handlers from int to zend_result in PR <a href="https://github.com/php/php-src/pull/8755">#8755</a> by Ilija Tovilo 💜</li>
<li>Multiple bug fixes related Enums in commits <a href="https://github.com/php/php-src/commit/bc03deec278923045235f470b4969bab358feaa2">bc03deec</a>, <a href="https://github.com/php/php-src/commit/bc03deec278923045235f470b4969bab358feaa2">d9e1871c</a>, <a href="https://github.com/php/php-src/commit/912c22cca0477a60507a957a835eccedfe1d00fe">912c22cc</a>, <a href="https://github.com/php/php-src/commit/45210b47294da6aafee7ca0a1b80db1c76fe4433">45210b47</a>, and <a href="https://github.com/php/php-src/commit/76fcd70c13f0c4b66937f381d5313c4f4c4cd548">76fcd70c</a> by Ilija Tovilo 💜</li>
<li>Allow arbitrary constant expressions in backed enums in PR <a href="https://github.com/php/php-src/pull/8190">#8190</a> by Ilija Tovilo 💜</li>
<li>Get rid of duplicated rotr3 implementation in PR <a href="https://github.com/php/php-src/pull/8853">#8853</a> by Ilija Tovilo 💜</li>
<li>Declare constants in stubs for several extensions by Máté Kocsis 💜</li>
<li>Fix lineno in backtrace of multi-line function calls, fixing <a href="https://github.com/php/php-src/issues/8810">GH-8810</a> in PR <a href="https://github.com/php/php-src/pull/8818">#8818</a> by Ilija Tovilo 💜</li>
<li>Refactoring part of SPL <code>Directory.c</code> PR <a href="https://github.com/php/php-src/pull/8837">#8837</a> by George Peter Banyard 💜</li>
<li>Use the passed '<code>this</code>' pointer instead of <code>ZEND_THIS</code>in PR <a href="https://github.com/php/php-src/pull/8854">#8854</a> by George Peter Banyard 💜</li>
<li>Fixed <a href="https://github.com/php/php-src/issues/8861">GH-8861</a>: correctly handle string lengths in <code>SplFileinfo</code> methods in PR <a href="https://github.com/php/php-src/issues/8861">#8861</a> by M. Vondano and George Peter Banyard 💜</li>
<li>Fix<a href="https://github.com/php/php-src/issues/8848"> GH-8848</a>: <code>imagecopyresized()</code> error refers to the wrong argument in commit <a href="https://github.com/php/php-src/commit/9405f43ba927376e02f4023cbfdc0f9bf412396d">9405f43b</a> by Christoph M. Becker</li>
<li>Convert iterable into an internal alias for Traversable|array PR <a href="https://github.com/php/php-src/pull/7309">#7309</a> by George Peter Banyard 💜</li>
<li>Use same type error wording for alias iterable in ZPP in PR <a href="https://github.com/php/php-src/pull/8838">#8838</a> by George Peter Banyard 💜</li>
<li>Support the <code>#[\AllowDynamicProperties]</code> attribute in stubs in PR <a href="https://github.com/php/php-src/pull/8776">#8776</a> by Tim Düsterhus</li>
<li>Refactor <code>sapi_getenv()</code> in PR <a href="https://github.com/php/php-src/pull/8786">#8786</a> by Heiko Weber</li>
<li>Specify unit in out of memory error in PR <a href="https://github.com/php/php-src/pull/8820">#8820</a> by Ilija Tovilo 💜</li>
<li>Tweak <code>$count</code> range check of array_fill() in PR <a href="https://github.com/php/php-src/pull/8804">#8804</a> by Christoph M. Becker</li>
<li>Fix<a href="https://github.com/php/php-src/issues/8827"> GH-8827</a>: Intentionally closing std handles no longer possible in commit <a href="https://github.com/php/php-src/commit/a8437d08a8a7122af17532e21c7ac3e02838809a">a8437d08</a> by Christoph M. Becker</li>
<li>Introduction of timing attack safe bcmp implementation in commit <a href="https://github.com/php/php-src/commit/bfe6f9e66a65d7c40fd486249097f932e2b237c3">bfe6f9e6</a> by David CARLIER</li>
<li>Replace the use of <code>ZVAL_BOOL()</code> with <code>ZVAL_TRUE()</code> or<code>ZVAL_FALSE()</code> where the value is fixed in PR <a href="https://github.com/php/php-src/pull/8815">#8815</a> by Yurun</li>
<li>intl ICU C++ code modernisation, making it closer to C++11 in PR <a href="https://github.com/php/php-src/pull/8650">#8650</a> by David CARLIER</li>
<li>Fix<a href="https://github.com/php/php-src/issues/8563"> GH-8563</a> Different results for <code>seek()</code> on <code>SplFileObject</code> and <code>SplTempFileObject</code> in commit <a href="https://github.com/php/php-src/commit/6f87a5c633">#6f87a5c6</a> by George Peter Banyard 💜</li>
<li>Zend, ext/opcache: use <code>PR_SET_VMA_ANON_NAME</code> (Linux 5.17) in PR <a href="https://github.com/php/php-src/pull/8234">#8234</a> by Max Kellermann</li>
<li>Fixed potential use after free in <code>php_binary_init()</code> in PR <a href="https://github.com/php/php-src/pull/8791">#8791</a> by Heiko Weber</li>
<li>Implemented: Declare true return types in PR <a href="https://github.com/php/php-src/pull/8759">#8759</a> by Máté Kocsis 💜</li>
<li>streams/xp_socket: eliminate <code>poll()</code> when <code>MSG_DONTWAIT</code> is available in PR <a href="https://github.com/php/php-src/pull/8092">#8092</a> by Max Kellermann</li>
<li>Fix<a href="https://github.com/php/php-src/issues/8778"> GH-8778</a>: Integer arithmetic with large number variants fails in PR <a href="https://github.com/php/php-src/pull/8779">#8779</a> by Christoph M. Becker</li>
<li>Fixed <a href="https://bugs.php.net/bug.php?id=77726">#77726</a>: Allow null character in regex patterns in PR <a href="https://github.com/php/php-src/pull/8114">#8114</a> by @tobil4sk</li>
<li>Fix <code>imagecreatefromavif()</code> memory leak in PR <a href="https://github.com/php/php-src/pull/8812">#8812</a> by Christoph M. Becker</li>
<li>Add <code>clean_module_functions()</code> in PR <a href="https://github.com/php/php-src/pull/8763">#8763</a> by @<a href="https://github.com/twose">twosee</a></li>
<li>Use <code>get_active_function_or_method_name()</code> for <code>zend_forbid_dynamic_call()</code> in PR <a href="https://github.com/php/php-src/pull/8762">#8762</a> by @twosee</li>
<li>Use HTTPS URLs in resource files in commit <a href="https://github.com/php/php-src/commit/9e9141f7126c507c2790bbbeede5abb99a0dc766">9e9141f7</a> by Christoph M. Becker</li>
<li>Add test for <code>iconv_mime_encode()</code> for input-charset and output-charset in PR <a href="https://github.com/php/php-src/pull/8766">#8766</a> by Christoph M. Becker</li>
<li>Regen missing <code>Zend/Optimizer/zend_func_infos.h</code> in commit <a href="https://github.com/php/php-src/commit/bbc0c4c5c8bfadcd3dd74dfd923ac8d4e512de9a">bbc0c4c5</a> by Pierrick Charron</li>
<li>Indent with TAB in <code>.h</code> files generated by <code>gen_stub</code> in commit <a href="https://github.com/php/php-src/commit/6fd2b39397be0626345786dd1803dd799ab3eb5b">6fd2b393</a> by Pierrick Charron</li>
<li>PDO ODBC: Fix handling of single-key connection strings in PR <a href="https://github.com/php/php-src/pull/8748">#8748</a> by Calvin Buckley</li>
<li>Fix redundant <code>ZSTR_VAL</code> condition in <code>php_date.c</code> in PR <a href="https://github.com/php/php-src/pull/8753">#8753</a> by Ilija Tovilo 💜</li>
<li>Add <code>SO_SETFIB</code> FreeBSD socket option constant in PR <a href="https://github.com/php/php-src/pull/8742">#8742</a> by David CARLIER. This is a follow-up to several of David’s contributions to the Sockets extension.</li>
<li>Fix<a href="https://github.com/php/php-src/issues/8661"> GH-8661</a>: Nullsafe in coalesce triggers undefined variable warning in PR <a href="https://github.com/php/php-src/pull/8690">#8690</a> by Ilija Tovilo 💜</li>
<li>Add function exposing <code>HAVE_GCC_GLOBAL_REGS</code> in PR <a href="https://github.com/php/php-src/pull/8359">#8359</a> by Joe Rowell</li>
<li>Fix<a href="https://github.com/php/php-src/issues/8691"> GH-8691</a>: Add required extensions for redirected tests in commit <a href="https://github.com/php/php-src/commit/c05c96b3fe2f309b9fe9b118d46681bf00caf798">c05c96b3</a> by George Peter Banyard 💜</li>
<li>Remove code duplication in <code>zend_std_compare_objects</code> in PR <a href="https://github.com/php/php-src/pull/8710">#8710</a> by Ilija Tovilo 💜</li>
<li>Fix Bug <a href="https://bugs.php.net/bug.php?id=76452">#76452</a>: Crash while parsing blob data in <code>firebird_fetch_blob</code> in commit <a href="https://github.com/php/php-src/commit/a6a13139db">a6a13139</a> by Ben Ramsey</li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=81720">#81720</a>: Uninitialized array in <code>pg_query_params()</code> leading to RCE in commit <a href="https://github.com/php/php-src/commit/55f6895f4b4c677272fd4ee1113acdbd99c4b5ab">55f6895f</a> by Christoph M. Becker</li>
<li>Fix detection of unknown gcc function attributes in PR <a href="https://github.com/php/php-src/pull/8483">#8483</a> by Athos Ribeiro</li>
<li>Better return types for <code>ReflectionEnum::getBackingType</code> in PR <a href="https://github.com/php/php-src/pull/8687">#8687</a> by Sam</li>
</ul>

<h2 id="mailing-list-discussions">Mailing List Discussions</h2>

<ul>
<li><a href="https://externals.io/message/117958">Discussion about new Curl URL API and ext/curl improvements</a>, started by Pierrick Charron</li>
<li><a href="https://externals.io/message/117678">The future of objects and operators</a>, started by Jordan LeDoux</li>
<li><a href="https://externals.io/message/117852">Adding new closing tag <code>=?&gt;</code> for keeping trailing newline</a>, started by Shinji Igarashi</li>
</ul>

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>A special mention goes to <a href="https://mailcoach.app/">mailcoach.app</a> for providing us with a platform for the newsletter.</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content><link href="https://thephp.foundation/blog/2022/06/30/php-core-roundup-3/"/><id>https://thephp.foundation/blog/2022/06/30/php-core-roundup-3/</id><pubDate>Thu, 30 Jun 2022 00:00:00 +0000</pubDate><author><name>Ayesh Karunaratne</name><uri>https://aye.sh</uri></author></entry><entry><title type="html"><![CDATA[PHP Core Roundup #5]]></title><content type="html"><![CDATA[<p>Welcome to the fifth edition of <em>PHP Core Roundup,</em> a <a href="https://thephp.foundation/blog/tag/roundup/">series of posts</a> that round up updates and news on the latest improvements, discussions, bug fixes, and new features in PHP.</p>

<blockquote>
  <p>The PHP Foundation currently supports six part-time PHP contributors who work on maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>
</blockquote>

<p><br>
We publish the posts on our website, and you can subscribe to a newsletter; You don’t necessarily have to be a PHP Foundation backer to follow <em>PHP Core Roundup</em>.</p>

<div class="px-4 pt-3 pb-10 mb-6 border-b border-t -mx-4 border-gray-200">
    <div class="max-w-xl mx-auto">
        <h2 class="text-xl text-left inline-block font-semibold text-gray-800 mb-1">Subscribe to PHP Core Roundup newsletter</h2>
        <form method="POST" action="https://php-foundation-mailcoach.com/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056" class="mt-2">
            <div class="flex items-center">
                <input placeholder="Your email address" type="email" class="w-full px-2 py-4 mr-2  bg-gray-100 shadow-inner rounded-md border border-gray-400 focus:outline-none" name="email" required>
                <button class="bg-[#7f52ff] text-gray-200 px-5 py-2 rounded shadow " style="margin-left: -7.8rem;">Sign Up</button>
            </div>
        </form>
    </div>
</div>

<p><a href="https://twitter.com/pronskiy/">Roman Pronskiy</a>, administration member of the PHP Foundation, also writes a monthly series about updates on the PHP Foundation, which are available under <a href="https://thephp.foundation/blog/tag/update/">The PHP Foundation Update</a> tag on the blog.</p>

<p>Elena Rubashevska from Open Collective interviewed Roman about the PHP Foundation, why and how it came to be, and his thoughts on the future of PHP, which you can read at <a href="https://blog.opencollective.com/php-foundation-alive-and-kicking/">PHP Foundation: Alive and Kicking</a>.</p>

<h2 id="php-8.2-branching-out">PHP 8.2 Branching Out</h2>

<p>PHP 8.2 <a href="https://thephp.foundation/blog/2022/07/28/php-core-roundup-4/#php-8.2-feature-freeze">reached its feature-freeze</a>, and <a href="https://thephp.foundation/blog/2022/05/30/php-core-roundup-2/#php-8.2-release-managers">release managers</a> have branched the PHP-8.2 branch on Aug 30th.</p>

<p>Now that PHP 8.2 is branched out, the <code>master</code> branch will be the development branch for PHP 8.3. Bug fixes and other improvements will be cherry-picked for PHP 8.2 (and older branches) as appropriate, but new features that are made to the master branch will not be merged to the PHP 8.2 branch.</p>

<p>Tools that build PHP based on the Git branches will also see the new branch, and the builds from the <code>master</code> branch will be named “PHP 8.3” for the first time.</p>

<h2 id="php-8.2-release-candidates">PHP 8.2 Release Candidates</h2>

<p>We already have PHP 8.2 beta releases, and the first PHP 8.2 Release Candidate (PHP 8.2.0-RC1) will be released on Sept 1st.</p>

<h2 id="remaining-minor-changes-to-php-8.2">Remaining minor changes to PHP 8.2</h2>

<p>Although the PHP 8.2 feature-freeze is passed, there are few changes that Jakub Zelenka <a href="https://externals.io/message/118438">proposed</a> merging, and a few more by other contributors that are now merged to PHP 8.2. All of the changes are contained (in that, they don’t drastically change other parts of PHP apart from that proposed change), and do not include any syntax changes.</p>

<ul>
<li>Add <code>libxml_get_external_entity_loader()</code> in PR <a href="https://github.com/php/php-src/pull/7977">#7977</a> by Tim Starling</li>
<li>Add <code>openssl_cipher_key_length</code> function in PR <a href="https://github.com/php/php-src/pull/9368">#9368</a> by Jakub Zelenka</li>
<li>Implement FR <a href="https://bugs.php.net/bug.php?id=76935">#76935</a>: OpenSSL chacha20-poly1305 AEAD support in PR <a href="https://github.com/php/php-src/pull/9366">#9366</a> by Jakub Zelenka</li>
<li>Improved responses to different requests on static resources in built-in web server in PR <a href="https://github.com/php/php-src/pull/8215">#8215</a> by Vedran Miletić</li>
<li>Fix Issue <a href="https://github.com/php/php-src/issues/9186">#9186</a>: <code>@strict-properties</code> can be bypassed using unserialization by Tim Düsterhus, Máté Kocsis, and Tyson Andre</li>
</ul>

<h2 id="recent-rfcs%2C-merged-prs%2C-and-commits">Recent RFCs, Merged PRs, and Commits</h2>

<p>Changes and improvements to PHP are discussed, reported, and voted on by the PHP Foundation Team, the PHP development team, and contributors. Bug reports are made to the PHP <a href="https://github.com/php/php-src/issues">issue tracker</a>, changes are discussed in <a href="https://www.php.net/mailing-lists.php">mailing lists</a>, minor code changes are proposed as <a href="https://github.com/php/php-src/issues">pull requests</a>, and major changes are discussed in detail and voted on as <a href="https://wiki.php.net/rfc">PHP RFCs</a>. <a href="https://github.com/php/doc-en/">Documentation</a> and the <a href="https://github.com/php/web-php">php.net web site</a> changes are also discussed and improved at their relevant Git repositories on GitHub.</p>

<p>Hundreds of awesome PHP contributors put their efforts into improvements to the PHP code base, documentation, and the php.net website. Here is a summary of some of the changes made by the people behind PHP. Things marked with 💜 are done by the PHP Foundation team.</p>

<p>Derick 💜 has gone through all the date/time notes in the manual and integrated them where possible into said manual. There were literally hundreds of notes, resulting in the following changes: <a href="https://news-web.php.net/php.doc.cvs/19840">#1</a> <a href="https://news-web.php.net/php.doc.cvs/19867">#2</a> <a href="https://news-web.php.net/php.doc.cvs/19871">#3</a></p>

<h2 id="rfc-updates-and-pull-request-updates">RFC Updates and Pull-Request Updates</h2>

<p>Following are the RFCs and major pull-requests discussed, voted, and implemented since our last update.</p>

<ul>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/asymmetric-visibility">Asymmetric Visibility</a></strong></p>

<p>RFC by Ilija Tovilo 💜 and Larry Garfield propose (who also brought Enums to PHP in PHP 8.2) started a discussion on adding a new syntax to granularly declare visibility conditions (such as public, protected, or private) for class property set operations (such as assigning a value to a class property), while the get operations (reading the class properties) are not restricted.</p>

<p>This RFC provides a new syntax for declaring the “set” operation visibility of an object property. Specifically:</p>

<pre><code>class Foo
{
    public private(set) string $bar;
}
</code></pre>

<p>This code declares a property <code>$bar</code> that may be read from <code>public</code> scope but may only be modified from <code>private</code> scope. It may also be declared <code>protected(set)</code> to allow the property to be set from any protected scope (that is, child classes).</p>

<p>There is an ongoing lengthy <a href="https://externals.io/message/118353">discussion</a> about this RFC, and Brent Roose has written a <a href="https://stitcher.io/blog/thoughts-on-asymmetric-visibility">blog post</a> about his take on this RFC too.</p></li>
<li><p><strong>RFC Under Discussion: <a href="https://wiki.php.net/rfc/json_validate">json_validate</a></strong></p>

<p>Juan Carlos Morales, on his first RFC, proposes to add a new <code>json_validate()</code> function that returns if the given string of JSON is a valid JSON. PHP’s <code>json_decode()</code> function can emit errors or throw exceptions on strings with invalid JSON, but the proposed json_validate function will be faster and more memory efficient because it does not attempt to build the data structures in memory, but merely validate the given string.</p>

<p>Juan first emailed the PHP-DEV mailing list <a href="https://externals.io/message/118310">last month</a>, trying to gather feedback. By that time, his proposed name was <code>is_json</code>. You can also read and participate in the <a href="https://externals.io/message/118467">discussions</a> on the mailing list.</p></li>
<li><p><strong>RFC Under Discussion: <code>StreamWrapper</code> Support for <code>glob()</code></strong></p>

<p>In this RFC Timmy Almroth proposes to add support for stream wrappers in the <code>glob()</code> function.</p>

<p><code>glob()</code> is a function in PHP to list and filter files and/or folders using a globbing pattern. The current implementation of <code>glob()</code> is a thin wrapper for POSIX glob(3). While all the Filesystem Functions in PHP support StreamWrappers, <code>glob()</code> does not.
This RFC proposes to add consistently for stream wrappers in glob() function. With stream wrappers supported, glob() function will be able to use any supported and <a href="https://www.php.net/manual/en/wrappers.php">registered stream wrapper</a> in PHP, similar to how other file system functions: \</p>

<pre><code class="php">glob('vfs://*.ext')
</code></pre>

<p><br></p></li>
<li><p><strong>RFC Implemented: <a href="https://wiki.php.net/rfc/constants_in_traits">Constants in Traits</a></strong></p>

<p>Shinji Igarashi and Stephen Reay's RFC to allow defining constants in traits is now implemented in PHP 8.2.</p>

<p>Constants defined in traits use the same syntax as class constants, and work similarly to class constants when the traits are used in classes. However, direct access to trait constants (without going through the classes that use the trait), and using traits in classes that both have the same constant names is not allowed.</p>

<p>All of the following constant declarations will work in PHP 8.2, but not allowed in older PHP versions:</p>

<pre><code class="php">trait FooBar {
    const FOO = 'foo';
    private const BAR = 'bar';
    final const BAZ = 'baz';
    final protected const QUX = 'qux';
}
</code></pre>

<p><br></p></li>
<li><p><strong>New Pull Request: <a href="https://github.com/php/php-src/pull/9403">Allow writing to readonly properties during cloning</a></strong></p>

<p>Nicolas Grekas has an open pull-request currently being discussed to allow setting or unsetting a property once when an object is being cloned (in the <code>__clone()</code> magic method).</p>

<p>There is a lengthy discussion in the PR itself, and a <a href="https://twitter.com/nicolasgrekas/status/1561960616331546625">Twitter thread</a> started by Nicolas:</p>

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Here is a proposal, for <a href="https://twitter.com/hashtag/PHP?src=hash&amp;ref_src=twsrc%5Etfw">#PHP</a> 8.3? <a href="https://t.co/bjvBXBhkzF">https://t.co/bjvBXBhkzF</a> <a href="https://t.co/d46FckQDc0">pic.twitter.com/d46FckQDc0</a></p>&mdash; Nicolas Grekas 💙💛 (@nicolasgrekas) <a href="https://twitter.com/nicolasgrekas/status/1561960616331546625?ref_src=twsrc%5Etfw">August 23, 2022</a></blockquote>

<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>This might lead to an RFC in the coming weeks and it might as well be the first RFC for PHP 8.3!</p></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Following are some changes that did not go through an RFC process because they are either planned, bug fixes, or progressive enhancements. There are automated unit and integration tests for each of these changes,  the PHP core developers review all pull requests.</p>

<ul>
<li>Máté Kocsis 💜 on his series of declaring extension constants in stub files for several extensions

<ul>
<li><code>ext/sqlite3</code> in <a href="https://github.com/php/php-src/pull/9181">GH-9181</a></li>
<li><code>ext/gd</code> in <a href="https://github.com/php/php-src/pull/9180">GH-9180</a></li>
<li><code>ext/pcntl</code> in <a href="https://github.com/php/php-src/pull/9075">GH-9075</a></li>
<li><code>ext/tokenizer</code> in <a href="https://github.com/php/php-src/pull/9148">GH-9148</a></li>
<li><code>ext/sodium</code> in <a href="https://github.com/php/php-src/pull/9225">GH-9225</a></li>
<li><code>ext/spl</code> in <a href="https://github.com/php/php-src/pull/9226">GH-9226</a></li>
<li><code>ext/intl</code> constants in stubs, in series <a href="https://github.com/php/php-src/pull/9205">GH-9205</a>, <a href="https://github.com/php/php-src/pull/9219">GH-9219</a>, <a href="https://github.com/php/php-src/pull/9233">GH-9233</a>, <a href="https://github.com/php/php-src/pull/9234">GH-9234</a>, <a href="https://github.com/php/php-src/pull/9267">GH-9267</a>, <a href="https://github.com/php/php-src/pull/9268">GH-9268</a>, <a href="https://github.com/php/php-src/pull/9269">GH-9269</a>, <a href="https://github.com/php/php-src/pull/9275">GH-9275</a>, <a href="https://github.com/php/php-src/pull/9276">GH-9276</a>, <a href="https://github.com/php/php-src/pull/9280">GH-9280</a>, <a href="https://github.com/php/php-src/pull/9281">GH-9281</a>, <a href="https://github.com/php/php-src/pull/9282">GH-9282</a>, <a href="https://github.com/php/php-src/pull/9385">GH-9385</a>, and <a href="https://github.com/php/php-src/pull/9387">GH-9387</a></li>
<li><code>ext/zip</code> in <a href="https://github.com/php/php-src/pull/9146">GH-9146</a></li>
<li><code>ext/sockets</code> in <a href="https://github.com/php/php-src/pull/9349">GH-9349</a></li>
<li><code>ext/curl</code> in <a href="https://github.com/php/php-src/pull/9384">GH-9384</a></li>
<li><code>ext/tidy</code> in <a href="https://github.com/php/php-src/pull/9383">GH-9383</a></li>
<li><code>phpdbg</code> in <a href="https://github.com/php/php-src/pull/9392">GH-9392</a></li>
<li><code>ext/standard</code> in series <a href="https://github.com/php/php-src/pull/9404">GH-9404</a>, <a href="https://github.com/php/php-src/pull/9426">GH-9426</a>, and <a href="https://github.com/php/php-src/pull/9427">GH-9427</a></li>
<li><code>ext/oci8</code> in <a href="https://github.com/php/php-src/pull/9419">GH-9419</a></li>
</ul></li>
<li>Derick Rethans 💜 on DateTime extension bug fixes, improvements, and major documentation improvements.

<ul>
<li>Updated to version 2022.2 (2022b) in <a href="https://github.com/php/php-src/commit/c6992121cc">c6992121cc</a>, <a href="https://github.com/php/php-src/commit/455c40da50">455c40da50</a>, and <a href="https://github.com/php/php-src/commit/2fbea217c2">2fbea217c2</a></li>
<li>The data for Tehran has changed, update test in <a href="https://github.com/php/php-src/commit/962d8bd0b6">962d8bd0b6</a></li>
<li>Fixed bug <a href="https://github.com/php/php-src/issues/9431">GH-9431</a>: <code>DateTime::getLastErrors()</code> not returning false when no errors/warnings in <a href="https://github.com/php/php-src/commit/932586c426">932586c426</a></li>
<li>Major improvements in DateTime extension documentation in <a href="https://github.com/php/doc-en/commit/1a9ee818e554e116b4721d432c6d671e14281ea0"><code>1a9ee818e</code></a>, <a href="https://github.com/php/doc-en/commit/c249f3bc56fcdb3ea3f64b1fa0c4fd96a7dcd5a4"><code>c249f3bc56</code></a>, and <a href="https://github.com/php/doc-en/commit/5c951013ca04161992efed8b86fb40f55669958e"><code>5c951013</code></a></li>
</ul></li>
<li>Fixed <a href="https://github.com/php/php-src/issues/9200">GH-9200</a>: setcookie has an obsolete expires date format in <a href="https://github.com/php/php-src/commit/15e3fcb468">15e3fcb468</a> by Derick Rethans 💜</li>
<li>Simplify and move check for too high expiry time, which you can't reach on 32bit systems in <a href="https://github.com/php/php-src/commit/a6a5d46704">a6a5d46704</a> by Derick Rethans 💜</li>
<li><code>ext/random</code> improvements by Tim Düsterhus

<ul>
<li>Improve error messages in <code>php_random_bytes()</code> in <a href="https://github.com/php/php-src/pull/9169">GH-9169</a></li>
<li>Improve phrasing in argument value errors in <code>ext/random</code> in <a href="https://github.com/php/php-src/pull/9206">GH-9206</a></li>
<li>Unify <code>ext/random</code> unserialize errors with <code>ext/date</code> in <a href="https://github.com/php/php-src/pull/9185">GH-9185</a></li>
<li>Clean up nested exceptions without value-add in <code>ext/random</code> in <a href="https://github.com/php/php-src/pull/9211">GH-9211</a></li>
<li>Clean up the implementation of <code>Randomizer::__construct()</code> in <a href="https://github.com/php/php-src/pull/9222">GH-9222</a></li>
<li>Fix PcgOneseq128XslRr64::__construct() definition in <code>random.stub.php</code> in <a href="https://github.com/php/php-src/pull/9235">GH-9235</a></li>
<li>Add <code>ext/random</code> Exception hierarchy in <a href="https://github.com/php/php-src/pull/9220">GH-9220</a></li>
<li>Fix undefined behavior of MT_RAND_PHP if range exceeds <code>ZEND_LONG_MAX</code> in <a href="https://github.com/php/php-src/pull/9197">GH-9197</a></li>
<li>Handle all-zero state in <code>Xoshiro256**</code> in <a href="https://github.com/php/php-src/pull/9250">GH-9250</a></li>
<li>Replace <code>RuntimeException</code> in <code>Randomizer::nextInt()</code> by <code>RandomException</code> in <a href="https://github.com/php/php-src/pull/9305">GH-9305</a></li>
<li>Unify structure for <code>ext/random</code>'s engine tests in <a href="https://github.com/php/php-src/pull/9321">GH-9321</a></li>
<li>Fix rand_range32() for umax = UINT32_MAX in <a href="https://github.com/php/php-src/pull/9416">GH-9416</a></li>
<li>Select <code>rand_rangeXX()</code> variant only based on the requested range in <a href="https://github.com/php/php-src/pull/9418">GH-9418</a></li>
</ul></li>
<li>random: split <code>Randomizer::getInt()</code> without argument to <code>Randomizer::nextInt()</code> in <a href="https://github.com/php/php-src/pull/9057">GH-9057</a> by zeriyoshi</li>
<li><code>PcgOneseq128XslRr64::jump()</code>: Throw <code>ValueError</code> for negative <code>$advance</code> in <a href="https://github.com/php/php-src/pull/9213">GH-9213</a> by Anton Smirnov</li>
<li><code>PcgOneseq128XslRr64::jump()</code>: Throw <code>ValueError</code> for negative <code>$advance</code> in <a href="https://github.com/php/php-src/pull/9213">GH-9213</a> by Anton Smirnov</li>
<li>Mbstring bug fixes and improvements by Alex Dowad

<ul>
<li>Move implementation of <code>mb_strlen</code> to <code>mbstring.c</code> in <a href="https://github.com/php/php-src/commit/94fde1566f">94fde1566f</a></li>
<li>New implementation of <code>mb_strimwidth</code> in <a href="https://github.com/php/php-src/commit/7299096095">7299096095</a></li>
<li>Fix legacy text conversion filter for CP50220 in <a href="https://github.com/php/php-src/commit/44b4fb2c36">44b4fb2c36</a>, UCS-4 in <a href="https://github.com/php/php-src/commit/0a6ea5bd4e">0a6ea5bd4e</a>, UTF7-IMAP in <a href="https://github.com/php/php-src/commit/219fff376b">219fff376b</a>, UTF-16 in <a href="https://github.com/php/php-src/commit/e1351eb0a6">e1351eb0a6</a>, 'HTML-ENTITIES' in <a href="https://github.com/php/php-src/commit/d617fcaae2">d617fcaae2</a>, CP50220 in <a href="https://github.com/php/php-src/commit/3517a70f93">3517a70f93</a>, and SJIS-2004 in <a href="https://github.com/php/php-src/commit/18e526cb51">18e526cb51</a></li>
<li>In legacy text conversion filters, reset filter state in 'flush' function in <a href="https://github.com/php/php-src/commit/f3c8efd711">f3c8efd711</a></li>
<li>Move kana conversion function to <code>mbfilter_cp5022x.c</code> in <a href="https://github.com/php/php-src/commit/78ee18413f">78ee18413f</a></li>
<li><code>mb_strimwidth</code> inserts error markers in invalid input string (for backwards compatibility) in <a href="https://github.com/php/php-src/commit/5370f344d2">5370f344d2</a></li>
<li>Use new encoding conversion filters for mb_parse_str and php_mb_post_handler in <a href="https://github.com/php/php-src/commit/aeccb139c3">aeccb139c3</a></li>
<li>Remove unused 'to_language' and 'from_language' struct fields in <a href="https://github.com/php/php-src/commit/8df515555b">8df515555b</a></li>
<li>Make control flow in mb_wchar_to_cp50220 a bit clearer in <a href="https://github.com/php/php-src/commit/88d13491de">88d13491de</a></li>
<li>mitate legacy behavior when converting non-encodings using mbstring in <a href="https://github.com/php/php-src/commit/a4656895dd">a4656895dd</a></li>
<li>Adjust number of error markers emitted for truncated UTF-8 code units in <a href="https://github.com/php/php-src/commit/128768a450">128768a450</a></li>
<li>Adjust number of error markers emitted for truncated ISO-2022-JP escape sequence in <a href="https://github.com/php/php-src/commit/c6bd08530e">c6bd08530e</a></li>
<li>Ensure that Base64 output always wraps lines in the same manner as legacy implementation in <a href="https://github.com/php/php-src/commit/4b370330d4">4b370330d4</a></li>
<li>Legacy conversion code for '7bit' to '8bit' inserts error markers in <a href="https://github.com/php/php-src/commit/983a29d3c0">983a29d3c0</a></li>
<li>SJIS-Mobile#SOFTBANK string can end immediately after special escape sequence in <a href="https://github.com/php/php-src/commit/bfccdbd858">bfccdbd858</a></li>
<li>Fix problems with ISO-2022-KR conversion in <a href="https://github.com/php/php-src/commit/d9269becca">d9269becca</a></li>
<li>Add test to exercise <code>_php_mb_encoding_handler_ex</code> with multiple possible input encodings in <a href="https://github.com/php/php-src/commit/93207535fa">93207535fa</a></li>
</ul></li>
<li>Reintroduce legacy 'SJIS-win' text encoding in mbstring in <a href="https://github.com/php/php-src/commit/371367ce3e">371367ce3e</a> by Alex Dowad</li>
<li>Improve DBA test suite in <a href="https://github.com/php/php-src/pull/8904">GH-8904</a> by George Peter Banyard 💜</li>
<li>Refactor code handling <code>file.current_zval</code> in <a href="https://github.com/php/php-src/pull/8934">GH-8934</a> by George Peter Banyard 💜</li>
<li>Fix parentheses warnings in <a href="https://github.com/php/php-src/commit/ba9debb544">ba9debb544</a> by Nikita Popov</li>
<li>Change <code>fetch_type</code> from <code>int</code> to <code>uint32_t</code> in <a href="https://github.com/php/php-src/pull/9152">GH-9152</a> by George Peter Banyard 💜</li>
<li>Fix unused-but-set-variable warnings in timelib in <a href="https://github.com/php/php-src/commit/40af94a24c">40af94a24c</a> by Nikita Popov</li>
<li>Fix unused-but-set-variable warning in <code>hebrev()</code> in <a href="https://github.com/php/php-src/commit/6ff662b2e6">6ff662b2e6</a> by Nikita Popov</li>
<li>Avoid K&amp;R style function declarations in <code>sha1()</code> in <a href="https://github.com/php/php-src/commit/04f5da4b77">04f5da4b77</a> by Nikita Popov</li>
<li>Suppress unused-but-set-variable warning in parsers in <a href="https://github.com/php/php-src/commit/107ad28350">107ad28350</a> by Nikita Popov</li>
<li>Close stale feature requests in <a href="https://github.com/php/php-src/pull/9182">GH-9182</a> by Ilija Tovilo 💜</li>
<li>Fix attribute target validation on fake closures in <a href="https://github.com/php/php-src/pull/9173">GH-9173</a> by Ilija Tovilo 💜</li>
<li>Fix arrow function with never return type in <a href="https://github.com/php/php-src/pull/9103">GH-9103</a> by Ilija Tovilo 💜</li>
<li>Add an API to manipulate observers at runtime in <a href="https://github.com/php/php-src/commit/9e2de4c2d9">9e2de4c2d9</a> by Bob Weinand</li>
<li>Update <code>libmysqlclient</code> version used in CI in <a href="https://github.com/php/php-src/commit/fc394b476b">fc394b476b</a> by Nikita Popov</li>
<li>Declare the <code>TestInterface::DUMMY</code> constant in stub in <a href="https://github.com/php/php-src/commit/668dbaf6ab">668dbaf6ab</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9183">GH-9183</a> Get rid of unnecessary PHPDoc param and return type checks in <a href="https://github.com/php/php-src/pull/9203">GH-9203</a> by Máté Kocsis 💜</li>
<li>Fix unserialize dictionary generation in <a href="https://github.com/php/php-src/commit/828c93bedc">828c93bedc</a> by Nikita Popov</li>
<li>Add <code>opcache.preload_user=root</code> to <code>run-tests.php</code> if root in <a href="https://github.com/php/php-src/commit/1c9a49e3f1">1c9a49e3f1</a> by Bob Weinand</li>
<li>Fix memory_leak in <code>zend_test</code> in <a href="https://github.com/php/php-src/commit/ac31e2e611">ac31e2e611</a> by Bob Weinand</li>
<li>Include internal functions in the observer API in <a href="https://github.com/php/php-src/commit/625f164963">625f164963</a> by Bob Weinand</li>
<li>Fix stale message in <code>close-stale-feature-requests.yml</code> in <a href="https://github.com/php/php-src/commit/7804cffe04">7804cffe04</a> by Ilija Tovilo 💜</li>
<li>Fix observer test in <a href="https://github.com/php/php-src/commit/50a3fa49b6">50a3fa49b6</a> by Bob Weinand</li>
<li>Fix <code>ZEND_RC_DEBUG</code> build in zend_test observer tests in <a href="https://github.com/php/php-src/commit/b3b21ed558">b3b21ed558</a> by Bob Weinand</li>
<li><code>phpdbg</code> few fixes, mostly printf-like format issues due to C str -> zend_string mismatches. annotate the allocator wrapper in <a href="https://github.com/php/php-src/commit/449edd815b">449edd815b</a> by David Carlier</li>
<li>Hide skipped tests in CI in <a href="https://github.com/php/php-src/pull/9163">GH-9163</a> by Ilija Tovilo 💜</li>
<li>Declare <code>Transliterator::$id</code> as <code>readonly</code> to unlock subclassing it in <a href="https://github.com/php/php-src/pull/9167">GH-9167</a> by Nicolas Grekas</li>
<li>Fix SSA reconstruction when body of "foreach" loop is removed in <a href="https://github.com/php/php-src/commit/af1a7b7b72">af1a7b7b72</a> by Dmitry Stogov</li>
<li>Fix incorrect guard motion out of the loop in <a href="https://github.com/php/php-src/commit/69c10aed58">69c10aed58</a> by Dmitry Stogov</li>
<li>Tracing: Prevent recording types of variables used to pass <code>zend_class_entry</code> in <a href="https://github.com/php/php-src/commit/2758ff2a77">2758ff2a77</a> by Dmitry Stogov</li>
<li>SPL: Use new improved <code>is_line_empty()</code> function instead of the old one in <a href="https://github.com/php/php-src/pull/9217">GH-9217</a> by George Peter Banyard 💜</li>
<li>Extended <code>map_ptr</code> before copying class table in <a href="https://github.com/php/php-src/pull/9188">GH-9188</a> by Arnaud Le Blanc 💜</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=65489">#65489</a>: <code>glob()</code> <code>basedir</code> check is inconsistent in <a href="https://github.com/php/php-src/commit/e5ab9f45d5">e5ab9f45d5</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8396">GH-8396</a>: Network online test using https broken in <a href="https://github.com/php/php-src/commit/dc01fce36d">dc01fce36d</a> by Jakub Zelenka 💜</li>
<li>Also fix <code>?-&gt;</code> on magic consts in const expressions in <a href="https://github.com/php/php-src/commit/7b43d819c8">7b43d819c8</a> by Ilija Tovilo 💜</li>
<li>DIM on null in const expr should emit warning in <a href="https://github.com/php/php-src/commit/3663f7661a">3663f7661a</a> by Ilija Tovilo 💜</li>
<li>Avoid unnecessary comparison in <a href="https://github.com/php/php-src/pull/9246">GH-9246</a> by Christoph M. Becker</li>
<li>Convert some macros to <code>zend_always_inline</code> functions in <a href="https://github.com/php/php-src/pull/8288">GH-8288</a> by George Peter Banyard 💜</li>
<li>Add conflict markers for dba tests in <a href="https://github.com/php/php-src/commit/f11228cdbe">f11228cdbe</a> by Christoph M. Becker</li>
<li>Remove <code>ZEND_DVAL_TO_LVAL_CAST_OK</code> in <a href="https://github.com/php/php-src/pull/9215">GH-9215</a> by Go Kudo</li>
<li>Save previous observer on the VM stack in <a href="https://github.com/php/php-src/commit/dc5475c191">dc5475c191</a> by Bob Weinand</li>
<li>Add proper handling to observe functions in fibers in <a href="https://github.com/php/php-src/commit/da94baf31a">da94baf31a</a> by Bob Weinand</li>
<li>CI: <code>macos-10.15</code> -> <code>macos-11</code> in <a href="https://github.com/php/php-src/pull/9087">GH-9087</a> by Go Kudo</li>
<li>Implement constants in traits in <a href="https://github.com/php/php-src/pull/8888">GH-8888</a> by sji</li>
<li>Fix unstable sapi test, fix <a href="https://github.com/php/php-src/issues/9140">GH-9140</a> in <a href="https://github.com/php/php-src/pull/9184">GH-9184</a> by Michael Voříšek</li>
<li>zend allocators adding <code>__declspec</code> allocator for windows in <a href="https://github.com/php/php-src/pull/9253">GH-9253</a> by David CARLIER</li>
<li>Fix <code>mb_strimwidth</code> RC info in <a href="https://github.com/php/php-src/pull/9254">GH-9254</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9244">GH-9244</a>: Segfault with <code>array_multisort</code> + <code>array_shift</code> in <a href="https://github.com/php/php-src/pull/9247">GH-9247</a> by Christoph M. Becker</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8472">GH-8472</a>: <code>stream_socket_accept</code> result may have incorrect metadata in <a href="https://github.com/php/php-src/commit/d9ff5e079f">d9ff5e079f</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9248">GH-9248</a>: Segmentation fault in <code>mb_strimwidth()</code> in <a href="https://github.com/php/php-src/pull/9273">GH-9273</a> by Christoph M. Becker</li>
<li>Make <code>"{$g{'h'}}"</code> emit fatal error and no incorrect deprecation notice in 8.2 in <a href="https://github.com/php/php-src/pull/9264">GH-9264</a> by Tyson Andre</li>
<li>Windows arm64 zend and standard extension support in <a href="https://github.com/php/php-src/pull/9115">GH-9115</a> by dixyes</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9266">GH-9266</a>: GC root buffer keeps growing when dtors are present in <a href="https://github.com/php/php-src/pull/9265">GH-9265</a> by Michael Olšavský</li>
<li>Windows arm64 build system support in <a href="https://github.com/php/php-src/pull/9116">GH-9116</a> by dixyes</li>
<li>QA - <code>pcntl</code> - adjust tests set/get priority check env vars and root user in <a href="https://github.com/php/php-src/commit/663b037c7b">663b037c7b</a> by jcm</li>
<li>Fixes CI macOs, replacing now disabled tidyp dependency to tidy-html5 in <a href="https://github.com/php/php-src/commit/8aeae636e3">8aeae636e3</a> by Vladislav Senin</li>
<li>Fix order of checks to throw exception with better message in <a href="https://github.com/php/php-src/commit/18183ff9c7">18183ff9c7</a> by Dmitry Stogov</li>
<li>Add <code>--[no-]progress</code> option to <code>run-tests.php</code> in <a href="https://github.com/php/php-src/pull/9255">GH-9255</a> by Ilija Tovilo 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9296">GH-9296</a>: <code>ksort</code> behaves incorrectly on arrays with mixed keys in <a href="https://github.com/php/php-src/pull/9293">GH-9293</a> by Denis Vaksman</li>
<li>Make pestr[n]dup infallible in <a href="https://github.com/php/php-src/pull/9295">GH-9295</a> by Ilija Tovilo 💜</li>
<li>Show function name when dumping fake closure in <a href="https://github.com/php/php-src/pull/9306">GH-9306</a> by Ilija Tovilo 💜</li>
<li>Fix <code>run-tests.php</code> --no-progress flag for non-parallel testing in <a href="https://github.com/php/php-src/commit/c809a213f2">c809a213f2</a> by Ilija Tovilo 💜</li>
<li>reallocarray using proper inline facility to check overflow on windows in <a href="https://github.com/php/php-src/pull/9300">GH-9300</a> by David CARLIER</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9309">GH-9309</a>: Segfault when connection is used after imap_close() in <a href="https://github.com/php/php-src/pull/9313">GH-9313</a> by Christoph M. Becker</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8409">GH-8409</a>: SSL handshake timeout persistent connections hanging in <a href="https://github.com/php/php-src/commit/d0527427be">d0527427be</a> by Jakub Zelenka 💜</li>
<li>Update expires format for session cookie in <a href="https://github.com/php/php-src/pull/9304">GH-9304</a> by Tim Düsterhus</li>
<li>Remove useless UNEXPECTED around RETURN_VALUE_USED in specialized RETVAL handler in <a href="https://github.com/php/php-src/pull/9329">GH-9329</a> by Ilija Tovilo 💜</li>
<li>Fix unexpected deprecated dynamic property warning in <a href="https://github.com/php/php-src/pull/9324">GH-9324</a> by twosee</li>
<li>Correct IntlDateFormatter::formatObject params in <a href="https://github.com/php/php-src/pull/9341">GH-9341</a> by Gert de Pagter</li>
<li>zend introduce const GNUC attribute. sub optimisation where there is no pointers, nor particular memory layout, thread local/volatile ... involved. usage concealed for now into little pack helpers. Closes #9326 in <a href="https://github.com/php/php-src/commit/db64c1cb70">db64c1cb70</a> by David Carlier</li>
<li>random left rotates annotating as const in <a href="https://github.com/php/php-src/pull/9346">GH-9346</a> by David CARLIER</li>
<li>PHP-8.1 is now for PHP 8.1.11-dev in <a href="https://github.com/php/php-src/commit/7f26661993">7f26661993</a> by Ben Ramsey</li>
<li>Prepare for 8.0.24 in <a href="https://github.com/php/php-src/commit/7c6316ad1c">7c6316ad1c</a> by Gabriel Caruso</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9339">GH-9339</a>: OpenSSL oid_file path check warning contains uninitialized path in <a href="https://github.com/php/php-src/commit/84dcf578b1">84dcf578b1</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9316">GH-9316</a>: $http_response_header is wrong for long status line in <a href="https://github.com/php/php-src/pull/9319">GH-9319</a> by Christoph M. Becker</li>
<li>add compat stuff for function attributes in <a href="https://github.com/php/php-src/commit/aa702c5459">aa702c5459</a> by Remi Collet</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=79451">#79451</a>: Using DOMDocument->replaceChild on doctype causes double free in <a href="https://github.com/php/php-src/pull/9201">GH-9201</a> by NathanFreeman</li>
<li>Fix GCC 9.4 uninitialized variable warning in <a href="https://github.com/php/php-src/commit/410e5d48a3">410e5d48a3</a> by Tim Starling</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9323">GH-9323</a>: crash when the VM enters userspace code via the GC in <a href="https://github.com/php/php-src/pull/9323">GH-9323</a> by Tim Starling</li>
<li>Fix bad merge in <a href="https://github.com/php/php-src/commit/5739dd0030">5739dd0030</a> by George Peter Banyard 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9227">GH-9227</a>: Trailing dots and spaces in filenames are ignored in <a href="https://github.com/php/php-src/pull/9229">GH-9229</a> by Christoph M. Becker</li>
<li>Revert Fixed bug <a href="https://bugs.php.net/bug.php?id=79451">#79451</a> in <a href="https://github.com/php/php-src/commit/d6831e9a5c">d6831e9a5c</a> by George Peter Banyard 💜</li>
<li>opcache jit fix message format for OpenBSD in <a href="https://github.com/php/php-src/commit/52e312afb8">52e312afb8</a> by David Carlier</li>
<li>Fix <a href="https://bugs.php.net/bug.php?id=79451">#79451</a>: <code>DOMDocument-&gt;replaceChild</code> on doctype causes double free in <a href="https://github.com/php/php-src/pull/9201">GH-9201</a> by NathanFreeman</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9285">GH-9285</a> Traits cannot be used in <code>readonly</code> classes in <a href="https://github.com/php/php-src/commit/0897266219">0897266219</a> by Máté Kocsis 💜</li>
<li>Fix <code>curl/sync_constants.php</code> in <a href="https://github.com/php/php-src/pull/9391">GH-9391</a> by Máté Kocsis 💜</li>
<li>Fix <code>pdo_oci</code> tests for PHP 8.0 in <a href="https://github.com/php/php-src/commit/305892580e">305892580e</a> by Michael Voříšek</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9361">GH-9361</a>: Segmentation fault on script exit in <a href="https://github.com/php/php-src/pull/9379">GH-9379</a> by Christoph M. Becker</li>
<li>Tracing JIT: Fix incorrect guard elimination in <a href="https://github.com/php/php-src/commit/c9c51eb1f1">c9c51eb1f1</a> by Dmitry Stogov</li>
<li>Add a new zend API to check that strings don't have <code>NUL</code> bytes in <a href="https://github.com/php/php-src/pull/9375">GH-9375</a> by George Peter Banyard 💜</li>
<li>Use <code>bool</code> instead of <code>int</code> in session struct in <a href="https://github.com/php/php-src/commit/e8e015777e">e8e015777e</a> by George Peter Banyard 💜</li>
<li>Add test for negative cookie lifetime in <a href="https://github.com/php/php-src/commit/a75de167bf">a75de167bf</a> by George Peter Banyard 💜</li>
<li>Remove <code>OnUpdateLazyWrite</code> validator in <a href="https://github.com/php/php-src/commit/e9749a3c1e">e9749a3c1e</a> by George Peter Banyard 💜</li>
<li>Remove <code>OnUpdateTransSid</code> validator in <a href="https://github.com/php/php-src/commit/ad3ee47c6d">ad3ee47c6d</a> by George Peter Banyard 💜</li>
<li>Check sessions are active before output emitted consistently in <a href="https://github.com/php/php-src/commit/a8f8cc207c">a8f8cc207c</a> by George Peter Banyard 💜</li>
<li>Fix memory leaks in <a href="https://github.com/php/php-src/commit/73c2d79fc5">73c2d79fc5</a> by Dmitry Stogov</li>
<li><code>SameSite</code> session cookie prop should behave like other INI settings in <a href="https://github.com/php/php-src/commit/66aed3a86f">66aed3a86f</a> by George Peter Banyard 💜</li>
<li>Don't enforce 64 hit counter on Windows in <a href="https://github.com/php/php-src/pull/9367">GH-9367</a> by Christoph M. Becker</li>
<li>JIT: Make code generation to be consistent with register allocation in <a href="https://github.com/php/php-src/commit/fd74ee7e90">fd74ee7e90</a> by Dmitry Stogov</li>
<li>Fix type inference in <a href="https://github.com/php/php-src/commit/95befc786a">95befc786a</a> by Dmitry Stogov</li>
<li>Drop range inference for <code>IS_NULL</code>/<code>IS_FALSE</code>/<code>IS_TRUE</code> in <a href="https://github.com/php/php-src/commit/567213c32a">567213c32a</a> by Dmitry Stogov</li>
<li>Enum error message consistency in <a href="https://github.com/php/php-src/pull/9350">GH-9350</a> by Ollie Read</li>
<li>Add an API to observe functions and classes being linked in <a href="https://github.com/php/php-src/commit/bf427b732a">bf427b732a</a> by Bob Weinand</li>
<li>Wrap observer notify functions into inlined enabled checks in <a href="https://github.com/php/php-src/commit/396b2aab85">396b2aab85</a> by Bob Weinand</li>
<li>Check at compile time that a built-in class is not being aliased in <a href="https://github.com/php/php-src/pull/9402">GH-9402</a> by George Peter Banyard 💜</li>
<li>Stop JIT hot spot counting in <a href="https://github.com/php/php-src/pull/9343">GH-9343</a> by wxue1</li>
<li>Fix coding style in <a href="https://github.com/php/php-src/commit/205ad0af29">205ad0af29</a> by Dmitry Stogov</li>
<li>Fix typo (Paletter → Palette) in <a href="https://github.com/php/php-src/pull/9414">GH-9414</a> by Christoph M. Becker</li>
<li>Fix <code>pdo_oci</code> tests for PHP 8.1 in <a href="https://github.com/php/php-src/pull/9051">GH-9051</a> by Michael Voříšek</li>
<li>Test <code>oci8</code> &amp; <code>pdo_oci</code> in CI in <a href="https://github.com/php/php-src/pull/8348">GH-8348</a> by Michael Voříšek</li>
<li><a href="https://github.com/php/php-src/issues/9370">GH-9370</a>: Fix opcache jit protection bits in <a href="https://github.com/php/php-src/commit/e787d9a0dc">e787d9a0dc</a> by David CARLIER</li>
<li><code>xmlRelaxNGCleanupTypes()</code> is deprecated as of <code>libxml2</code> 2.10.0 in <a href="https://github.com/php/php-src/pull/9417">GH-9417</a> by Christoph M. Becker</li>
<li>Fix <code>oci8/pdo_oci</code> random test failures when run in parallel in <a href="https://github.com/php/php-src/pull/9424">GH-9424</a> by Michael Voříšek</li>
<li>Reduce observer overhead when restoring script from opcache in <a href="https://github.com/php/php-src/pull/9413">GH-9413</a> by Dmitry Stogov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8348">GH-8348</a> for nightly in <a href="https://github.com/php/php-src/commit/34d9e089c2">34d9e089c2</a> by Michael Voříšek</li>
<li><strong>Fix <code>@strict-prototypes</code> warning in <a href="https://github.com/php/php-src/commit/3264f2367d">3264f2367d</a> by Ilija Tovilo 💜</strong></li>
<li>Support test-ini also for phpize builds in <a href="https://github.com/php/php-src/pull/8787">GH-8787</a> by Christoph M. Becker</li>
<li>Fix <code>pdo_dblib</code> ext test conflicts when run in parallel in <a href="https://github.com/php/php-src/pull/9430">GH-9430</a> by Michael Voříšek</li>
<li>Do not generate <code>CONST_CS</code> when registering constants in <a href="https://github.com/php/php-src/pull/9439">GH-9439</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9310">GH-9310</a>: SSL   local_cert<code>and</code>local_pk<code>do not respect</code>open_basedir` restriction in <a href="https://github.com/php/php-src/commit/505e8d2a04">505e8d2a04</a> by Jakub Zelenka 💜</li>
<li>Implement FR <a href="https://bugs.php.net/bug.php?id=76935">#76935</a>: OpenSSL    chacha20-poly1305    AEAD support in <a href="https://github.com/php/php-src/commit/1407968891">1407968891</a> by Jakub Zelenka 💜</li>
<li><strong>Add <code>openssl_cipher_key_length</code> function in <a href="https://github.com/php/php-src/commit/35e2a25d83">35e2a25d83</a> by Jakub Zelenka 💜</strong></li>
<li><strong>Add <code>libxml_get_external_entity_loader()</code> in <a href="https://github.com/php/php-src/commit/11796229f2">11796229f2</a> by Tim Starling</strong></li>
<li>Drop unsupported <code>libxml2</code> 2.10.0 symbols in <a href="https://github.com/php/php-src/pull/9358">GH-9358</a> by Christoph M. Becker</li>
<li>Respond without body to <code>HEAD</code> request on a static resource in <a href="https://github.com/php/php-src/commit/4f509058a9">4f509058a9</a> by Vedran Miletić</li>
<li>Respond with HTTP status 405 to <code>DELETE/PUT/PATCH</code> request on a static resource in <a href="https://github.com/php/php-src/commit/7065a222b7">7065a222b7</a> by Vedran Miletić</li>
<li>Update NEWS for CLI built-in server changes in <a href="https://github.com/php/php-src/commit/5e9af0d0b0">5e9af0d0b0</a> by Jakub Zelenka 💜</li>
<li>Add a bit verbosity in FPM logs in <a href="https://github.com/php/php-src/commit/335979fe1b">335979fe1b</a> by Mikhail Galanin</li>
<li>FPM fix strict prototype warnings in <a href="https://github.com/php/php-src/pull/8986">GH-8986</a> by David Carlier</li>
<li>Fix <code>ext/opcache/tests/jit/inc_obj_004.phpt</code> failure introduced by <a href="https://github.com/php/php-src/commit/fd74ee7e909c66f09d8d904a5438b275a13e8738">fd74ee7e</a> in <a href="https://github.com/php/php-src/commit/ce42dcf483">ce42dcf483</a> by Dmitry Stogov</li>
<li>Delay fiber VM stack cleanup until after observer has been called in <a href="https://github.com/php/php-src/commit/8fe1db2089">8fe1db2089</a> by Bob Weinand</li>
<li><strong>Revert "Fix <a href="https://github.com/php/php-src/issues/9296">GH-9296</a>: <code>ksort</code> behaves incorrectly on arrays with mixed keys" in <a href="https://github.com/php/php-src/commit/725cb4e8ad">725cb4e8ad</a> by Christoph M. Becker</strong></li>
<li>JIT: Fix missing type store in <a href="https://github.com/php/php-src/commit/4b884bedc8">4b884bedc8</a> by Dmitry Stogov</li>
<li>Fix memory leak in <a href="https://github.com/php/php-src/commit/4135e6011c">4135e6011c</a> by Dmitry Stogov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8885">GH-8885</a>: access.log with stderr writes logs to error_log after reload in <a href="https://github.com/php/php-src/commit/f92505cf24">f92505cf24</a> by Dmitry Menshikov</li>
<li>Fix <a href="https://github.com/php/php-src/issues/8885">GH-8885</a> tests on MacOS in <a href="https://github.com/php/php-src/commit/bcdd9877e1">bcdd9877e1</a> by Jakub Zelenka 💜</li>
<li>Re-add fixed tests for <a href="https://github.com/php/php-src/issues/8885">GH-8885</a> in <a href="https://github.com/php/php-src/commit/986e7319c5">986e7319c5</a> by Jakub Zelenka 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9347">GH-9347</a>: Current ODBC liveness checks may be inadequate in <a href="https://github.com/php/php-src/pull/9353">GH-9353</a> by Calvin Buckley</li>
<li>Fix bug <a href="https://bugs.php.net/bug.php?id=77780">#77780</a>: "Headers already sent" when previous connection was aborted in <a href="https://github.com/php/php-src/commit/3503b1daa2">3503b1daa2</a> by Jakub Zelenka 💜</li>
<li>Fix FPM tester conflict in <a href="https://github.com/php/php-src/commit/e3034dba3e">e3034dba3e</a> by Jakub Zelenka 💜</li>
<li>Update <code>gen_stub</code> to avoid compile errors on duplicate function names in <a href="https://github.com/php/php-src/pull/9406">GH-9406</a> by Andreas Braun</li>
<li>Fix <code>zend/test</code> aliases in <a href="https://github.com/php/php-src/commit/ef21bbe66c">ef21bbe66c</a> by Máté Kocsis 💜</li>
<li>Adjust PHPDoc in <a href="https://github.com/php/php-src/commit/869ab3c481">869ab3c481</a> by Máté Kocsis 💜</li>
<li>Remove unused <code>ext/zend_test</code> alias functions in <a href="https://github.com/php/php-src/commit/8d78dce902">8d78dce902</a> by Máté Kocsis 💜</li>
<li>Fix <a href="https://github.com/php/php-src/issues/9186">GH-9186</a> @strict-properties can be bypassed using unserialization in <a href="https://github.com/php/php-src/pull/9354">GH-9354</a> by Máté Kocsis 💜</li>
<li>Catch up dev version numbers in <a href="https://github.com/php/php-src/commit/3d6ed8c852">3d6ed8c852</a> by Sara Golemon</li>
<li>Make <code>var_export</code>/<code>debug_zval_dump</code> check for infinite recursion on the <em>object</em> in <a href="https://github.com/php/php-src/pull/9448">GH-9448</a> by Tyson Andre</li>
<li>Revert "Fix <a href="https://github.com/php/php-src/issues/9296">GH-9296</a>: <code>ksort</code> behaves incorrectly on arrays with mixed keys" in <a href="https://github.com/php/php-src/commit/1862152145">1862152145</a> by Ben Ramsey</li>
<li>Fix tests in <a href="https://github.com/php/php-src/commit/65619e868c">65619e868c</a> by Christoph M. Becker</li>
<li>Add NEWS and UPGRADING entries for <a href="https://github.com/php/php-src/issues/9296">GH-9296</a> in <a href="https://github.com/php/php-src/commit/853181a14d">853181a14d</a> by Christoph M. Becker</li>
<li>Prepare for PHP 8.3 in <a href="https://github.com/php/php-src/commit/327c95237c">327c95237c</a> by Pierrick Charron</li>
</ul>

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>A special mention goes to <a href="https://mailcoach.app/">mailcoach.app</a> for providing us with a platform for the newsletter.</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content><link href="https://thephp.foundation/blog/2022/08/30/php-core-roundup-5/"/><id>https://thephp.foundation/blog/2022/08/30/php-core-roundup-5/</id><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><author><name>Ayesh Karunaratne</name><uri>https://aye.sh</uri></author></entry><entry><title type="html"><![CDATA[PHP Roundup #1]]></title><content type="html"><![CDATA[<p>Welcome to the first <em>PHP Roundup</em>, where we’ll make regular updates on the improvements made to PHP by the <em>PHP Foundation</em> and other contributors. PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP news and articles on upcoming changes.</p>

<p>In this series, we highlight some of the interesting and major improvements made to the PHP language. Traditionally, the PHP team releases a new minor version of the interpreter towards the end of each year, but the changes and improvements are discussed and implemented throughout the year.</p>

<p>You don’t necessarily have to be a PHP Foundation backer to follow the PHP Roundup. We’ll be publishing the posts on our website, and you can subscribe to a newsletter:</p>

<div class="px-4 pt-3 pb-10 mb-6 border-b border-t -mx-4 border-gray-200">
    <div class="max-w-xl mx-auto">
        <h2 class="text-xl text-left inline-block font-semibold text-gray-800 mb-1">Subscribe to PHP Foundation Updates</h2>
        <form method="POST" action="https://php-foundation-mailcoach.com/subscribe/9be4e2bd-f9d8-475c-b00e-2dcc4cf90056" class="mt-2">
            <div class="flex items-center">
                <input placeholder="Your email address" type="email" class="w-full px-2 py-4 mr-2  bg-gray-100 shadow-inner rounded-md border border-gray-400 focus:outline-none" name="email" required>
                <button class="bg-[#7f52ff] text-gray-200 px-5 py-2 rounded shadow " style="margin-left: -7.8rem;">Sign Up</button>
            </div>
        </form>
    </div>
</div>

<p>The PHP Foundation currently supports six part-time PHP contributors who work on both maintenance and new features for PHP. Maintenance is not limited to fixing bugs, but also includes work to reduce technical debt, making life easier for everyone working on PHP. The contributors funded by the PHP Foundation collaborate with other contributors on code, documentation, and discussions.</p>

<p>Things marked with 💜 are done by the PHP Foundation team.</p>

<p>Let’s get straight to the updates.</p>

<h2 id="rfc-updates">RFC Updates</h2>

<p>Every major change to PHP is discussed and implemented with the consensus of the PHP community. Each RFC proposes a set of changes, and the PHP Internals community holds a vote that lasts two weeks by default.</p>

<ul>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/null-false-standalone-types">Allow null and false as stand-alone types</a> 💜</strong></p>

<p>RFC by George Peter Banyard was accepted unanimously with all 38 votes in favor and is now merged into PHP.</p>

<p>Prior to this change, <code>null</code>and <code>false</code>could only be used as part of a Union Type, but not as stand-alone types. This change further improves PHP’s type system to be more expressive and defensive. See the <code>true</code> type RFC below that proposes adding <code>true</code>as a type too.</p>

<p>Learn more about this RFC from the <a href="https://phpinternals.news/99">PHP Internals News podcast</a> hosted by Derick Rethans.</p></li>
<li><p><strong>Implemented: <a href="https://wiki.php.net/rfc/redact_parameters_in_back_traces">Redacting parameters in back traces</a></strong></p>

<p>RFC by Tim Düsterhus, approved with 24:1 votes in favor, is now implemented in PHP core.</p>

<p>This RFC proposed adding a <code>#[SensitiveParameter]</code> attribute that redacts the parameter's actual value when it is spewed out in stack traces and <code>var_dump</code>output. The attribute can be used to prevent leaking sensitive information in debugging logs.</p>

<p>Learn more about this RFC from the <a href="https://phpinternals.news/97">PHP Internals News podcast</a> hosted by Derick Rethans.</p></li>
<li><p><strong>Discussion: <a href="https://wiki.php.net/rfc/true-type">Add true type</a> 💜</strong></p>

<p>RFC by George Peter Banyard is currently under discussion, to add true as a type to PHP. In PHP 8.0 Union Types, we added <code>false</code> as one of the possible members of Union Types, but left out <code>true</code>. This RFC proposes to complete it by adding <code>true</code> as a type as well.</p></li>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/undefined_variable_error_promotion">Undefined Variable Error Promotion</a></strong></p>

<p>RFC by Mark Randall accepted with 33:8 votes in favor.</p>

<p>This proposes to convert the current behavior of PHP raising a warning for accessing an undefined variable (PHP 8.0+) to throw an Error exception instead in PHP 9.0.</p></li>
<li><p><strong>Voting: <a href="https://wiki.php.net/rfc/undefined_property_error_promotion">Undefined Property Error Promotion</a></strong></p>

<p>Another RFC by Mark Randall proposes to throw an error on undefined class property access, similar to the now accepted changes with undefined variables. Notably, PHP 8.2 already emits deprecation notices on dynamic property creation (<a href="https://php.watch/versions/8.2/dynamic-properties-deprecated#exempt">with a few exceptions</a>).</p></li>
<li><p><strong>Voting: <a href="https://wiki.php.net/rfc/readonly_classes">Readonly classes</a> 💜</strong></p>

<p>RFC by Máté Kocsis proposes to add support for readonly classes. In such a class, all properties are <code>readonly</code>and dynamic properties are forbidden. Voting is scheduled to start on April 27th.</p></li>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/deprecate_dollar_brace_string_interpolation">Deprecate ${} string interpolation</a> 💜</strong></p>

<p>RFC by Ilija Tovilo accepted with 31:1 votes in favor.</p>

<p>This RFC proposes to deprecate <code>"${foo}"</code> and "<code>${(foo)}</code>" string interpolation patterns. It does <em>not</em> deprecate the standard "<code>{$foo}</code>" pattern.</p></li>
<li><p><strong>Accepted: <a href="https://wiki.php.net/rfc/remove_utf8_decode_and_utf8_encode">Deprecate and Remove utf8_encode and utf8_decode</a></strong></p>

<p>Learn more about this RFC from the <a href="https://phpinternals.news/98">PHP Internals News podcast</a> hosted by Derick Rethans.</p></li>
</ul>

<h2 id="merged-prs-and-commits">Merged PRs and Commits</h2>

<p>Some of the minor changes made to PHP are first made as a pull request to the <a href="github.com/php/php-src">PHP GitHub project</a>, and if deemed acceptable by PHP core maintainers, they are merged without going through a formal RFC process. We have automatic tests in place to flag PRs that break existing functionality. The majority of the minor changes from the community are made through PRs.</p>

<ul>
<li>New: <a href="https://github.com/php/php-src/pull/7823">Introduce CURLOPT_XFERINFOFUNCTION</a> by <a href="https://github.com/devnexen">David CARLIER</a>.</li>
<li>Fixed: <a href="https://github.com/php/php-src/issues/8133">Constants in Enum classes causes php-fpm worker to segfault</a> by Ilija Tovilo. 💜</li>
<li>Fixed: <a href="https://github.com/php/php-src/issues/8273">SplFileObject: key() returns wrong value</a> by George Peter Banyard. <strong>💜</strong></li>
<li>Fixed: Bug #<a href="https://bugs.php.net/bug.php?id=76003">76003</a> <a href="https://github.com/php/php-src/commit/33bb201b3eddbda0cc93c9cd1cb9adb4c77d0df2">FPM /status reports wrong number of active processes</a> by Jakub Zelenka <strong>💜</strong></li>
<li>Fixed: Bug #<a href="https://github.com/php/php-src/commit/d8612fb6b7496a4f17e8250037a00b26623c1c77">77023 PHP-FPM cannot shutdown processes</a> by Jakub Zelenka <strong>💜</strong></li>
<li>Reviewed and merged various fixes and improvements to FPM by Jakub Zelenka: <strong>💜</strong>

<ul>
<li><a href="https://github.com/php/php-src/commit/2874e5fa052d54affd31ed5eaf3e0d53c9116c93">Emitting error for invalid listen port</a> (implemented by David Carlier)</li>
<li><a href="https://github.com/php/php-src/commit/7bb2a9ff38b739d2143134b6ce0d9cc3dd9b78fe">SELinux dumpable</a> (implemented by David Carlier)</li>
<li><a href="https://github.com/php/php-src/commit/2f0918c638cbba0f5d36b9b2f3d0aa8cf95651c9">Clang warning in socket cleanup</a> (implemented by David Carlier)</li>
<li><a href="https://github.com/php/php-src/commit/7be195caa7589560d5e1a019e389850fdb5c8a1e">Listening queue MacOS support</a> (implemented by David Carlier)</li>
<li><a href="https://github.com/php/php-src/commit/1e562683cb995b9903f4d24ba9eb5bb89ae3fbfb">New default for listen backlog on Linux</a> (implemented by Cristian Rodríguez)</li>
<li><a href="https://github.com/php/php-src/commit/ff90d42b8bc292bd7bfc532e29e5cdff242ee3e1">Kqueue typo in remove callback type</a> (implemented by David Carlier)</li>
</ul></li>
<li>Fixed: Various (<a href="https://github.com/php/php-src/issues/7752">1</a>, <a href="https://github.com/php/php-src/issues/8101">2</a>, <a href="https://bugs.php.net/bug.php?id=81660">3</a>) bugs related to DateTime support, as well as reimplementing serialization support for all classes, by Derick Rethans 💜</li>
<li>Improved: Migrated most of the CI setup from Azure Pipelines to GitHub Actions by Ilija Tovilo 💜</li>
<li>Fixed: <a href="https://github.com/php/php-src/issues/8310">Registry settings are no longer recognized</a> by Christoph M. Becker, reported by Vladimir S.</li>
<li>Several engine improvements by Dmitry Stogov and Nikita Popov.</li>
</ul>

<p>Apart from the highlighted changes above, there have been more improvements and fixes from @divinity76, Marco Pivetta, Arnaud Le Blanc, Alex Dowad, and more.</p>

<h2 id="mailing-list-discussions">Mailing List Discussions</h2>

<ul>
<li><a href="https://externals.io/message/117577">Canonicalize "iterable" into "array|Traversable" and Reflection</a>, started by George Peter Banyard. 💜</li>
<li><a href="https://externals.io/message/117486">MySQLi Execute Query RFC</a>, started by Craig Francis.</li>
<li><a href="https://externals.io/message/117501">NULL Coercion Consistency</a>, also started by Craig Francis.</li>
</ul>

<h2 id="support-php-foundation">Support PHP Foundation</h2>

<p>At PHP Foundation, we support, promote, and advance the PHP language. We financially support six part-time PHP core developers to contribute to the PHP project. You can help support PHP Foundation at <a href="https://opencollective.com/phpfoundation">OpenCollective</a>.</p>

<p>A big thanks to all our sponsors — PHP Foundation is all of us!</p>

<p>A special mention goes to <a href="https://mailcoach.app/">mailcoach.app</a> for providing us with a platform for the newsletter.</p>

<p>Follow us on Twitter <a href="https://twitter.com/thephpf">@ThePHPF</a> to get the latest updates from the Foundation.</p>

<p>💜️ 🐘</p>

<blockquote>
  <p>PHP Roundup is prepared by Ayesh Karunaratne from <strong><a href="https://php.watch">PHP.Watch</a></strong>, a source for PHP News, Articles, Upcoming Changes, and more.</p>
</blockquote>
]]></content><link href="https://thephp.foundation/blog/2022/04/28/php-roundup-1/"/><id>https://thephp.foundation/blog/2022/04/28/php-roundup-1/</id><pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate><author><name>Ayesh Karunaratne</name><uri>https://twitter.com/Ayeshlive</uri></author></entry></feed>
